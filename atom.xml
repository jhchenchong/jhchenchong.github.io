<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>浪漫恋星空的博客</title>
  
  <subtitle>从陌生的闭区间到爱的开区间&lt;br /&gt;流淌的是岁月&lt;br /&gt;不变的是时间&lt;br /&gt;只是有段回忆&lt;br /&gt;会永远被铭记&lt;br /&gt;[陌生，爱)&lt;br /&gt;陌路伊始&lt;br /&gt;相爱无期</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://localhost:4000/"/>
  <updated>2018-01-12T13:23:56.580Z</updated>
  <id>http://localhost:4000/</id>
  
  <author>
    <name>浪漫恋星空</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>星空回忆里的那些点滴</title>
    <link href="http://localhost:4000/2018/01/12/%E6%98%9F%E7%A9%BA%E5%9B%9E%E5%BF%86%E9%87%8C%E7%9A%84%E9%82%A3%E4%BA%9B%E7%82%B9%E6%BB%B4/"/>
    <id>http://localhost:4000/2018/01/12/星空回忆里的那些点滴/</id>
    <published>2018-01-12T13:23:56.580Z</published>
    <updated>2018-01-12T13:23:56.580Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><p>越过喜马拉雅的山巅<br>愿世界化为沧海<br>愿你我归于初见</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;headerlink&quot; title=&quot;1&quot;&gt;&lt;/a&gt;1&lt;/h3&gt;&lt;p&gt;越过喜马拉雅的山巅&lt;br&gt;愿世界化为沧海&lt;br&gt;愿你我归于初见&lt;/p&gt;

      
    
    </summary>
    
      <category term="星空随笔" scheme="http://localhost:4000/categories/%E6%98%9F%E7%A9%BA%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="回忆" scheme="http://localhost:4000/tags/%E5%9B%9E%E5%BF%86/"/>
    
      <category term="青春" scheme="http://localhost:4000/tags/%E9%9D%92%E6%98%A5/"/>
    
  </entry>
  
  <entry>
    <title>一个简单的获取验证码控件的封装</title>
    <link href="http://localhost:4000/2018/01/12/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%8E%B7%E5%8F%96%E9%AA%8C%E8%AF%81%E7%A0%81%E6%8E%A7%E4%BB%B6%E7%9A%84%E5%B0%81%E8%A3%85/"/>
    <id>http://localhost:4000/2018/01/12/一个简单的获取验证码控件的封装/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:53:31.234Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>在日常的开发过程中，获取验证码是一个常见的功能。一般情况下，为了提高用户体验，产品都会在点击获取验证码之后，让这个点击控件做一个渐变动画，设置一个时长，然后可以点击重新获取。这是一个非常简单且经常用到的功能，可以考虑将这个小控件直接封装出来，方便随时使用。</p><h3 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a>实现效果</h3><p><img src="http://upload-images.jianshu.io/upload_images/1777873-110fedabc97ea4c4.gif?imageMogr2/auto-orient/strip" alt="效果.gif"></p><a id="more"></a><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><p>自定义一个UIView，在这个View上添加一个显示进度的ProgressView，和一个显示文字的UILabel。通过NSTimer修改UILabel上的文字，渐变的动画就是简单的UIView动画，通过改变ProgressView的frame来实现。</p><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><p>创建一个XKCaptchaView继承于UIView，在.h头文件中声明需要的属性和方法。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@class</span> <span class="title">XKCaptchaView</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 点击XKCaptchaView触发的回调Block</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span>(^XKCaptchaActionBlock)(XKCaptchaView *view);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">XKCaptchaView</span> : <span class="title">UIView</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 间隔时长（指定一个时长，在这个时长之后控件可以重新点击）</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">NSTimeInterval</span> reEnableTimeInterval;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 进度视图的背景颜色</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIColor</span> *progressViewBgColor;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化方法</span></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame reEnableTimeInterval:(<span class="built_in">NSTimeInterval</span>)interval actionBlock:(XKCaptchaActionBlock)actionBlock;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始动画</span></span><br><span class="line">- (<span class="keyword">void</span>)startAnimation;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 回到最初的状态</span></span><br><span class="line">- (<span class="keyword">void</span>)changToNormal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>实现文件的代码如下：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"XKCaptchaView.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">XKCaptchaView</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIView</span> *_reEnableProgressView;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UILabel</span> *_titleLabel;</span><br><span class="line">    </span><br><span class="line">    XKCaptchaActionBlock _actionBlock;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSTimer</span> *_timer;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSInteger</span> _timerInteger;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)dealloc &#123;</span><br><span class="line">    </span><br><span class="line">    [_timer invalidate];</span><br><span class="line">    </span><br><span class="line">    _timer = <span class="literal">nil</span>;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.subviews makeObjectsPerformSelector:<span class="keyword">@selector</span>(removeFromSuperview)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame reEnableTimeInterval:(<span class="built_in">NSTimeInterval</span>)interval actionBlock:(XKCaptchaActionBlock)actionBlock &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> initWithFrame:frame]) &#123;</span><br><span class="line">        </span><br><span class="line">        _reEnableTimeInterval = interval;</span><br><span class="line">        </span><br><span class="line">        _reEnableProgressView = [[<span class="built_in">UIView</span> alloc] initWithFrame:<span class="keyword">self</span>.bounds];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.backgroundColor = [<span class="built_in">UIColor</span> lightGrayColor];</span><br><span class="line">        </span><br><span class="line">        _reEnableProgressView.backgroundColor = [<span class="built_in">UIColor</span> orangeColor];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (actionBlock) &#123;</span><br><span class="line">            _actionBlock = actionBlock;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">UITapGestureRecognizer</span> * tap = [[<span class="built_in">UITapGestureRecognizer</span> alloc] initWithTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(handleTap)];</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> addGestureRecognizer:tap];</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> addSubview:_reEnableProgressView];</span><br><span class="line">        </span><br><span class="line">        _titleLabel = [[<span class="built_in">UILabel</span> alloc] initWithFrame:<span class="keyword">self</span>.bounds];</span><br><span class="line">        </span><br><span class="line">        _titleLabel.text = <span class="string">@"获取验证码"</span>;</span><br><span class="line">        </span><br><span class="line">        _titleLabel.textAlignment = <span class="built_in">NSTextAlignmentCenter</span>;</span><br><span class="line">        </span><br><span class="line">        _titleLabel.textColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">        </span><br><span class="line">        _timerInteger = interval;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> addSubview:_titleLabel];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)handleTap &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (_actionBlock) &#123;</span><br><span class="line">     </span><br><span class="line">        _actionBlock(<span class="keyword">self</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)change &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (_timerInteger == <span class="number">0</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        [_timer invalidate];</span><br><span class="line">        </span><br><span class="line">        _titleLabel.text = <span class="string">@"获取验证码"</span>;</span><br><span class="line">        </span><br><span class="line">        _timerInteger = _reEnableTimeInterval;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    _timerInteger--;</span><br><span class="line">    </span><br><span class="line">    _titleLabel.text = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"获取验证码(%ld)"</span>,(<span class="keyword">long</span>)_timerInteger];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)startAnimation &#123;</span><br><span class="line">    </span><br><span class="line">    _timer = [<span class="built_in">NSTimer</span> scheduledTimerWithTimeInterval:<span class="number">1</span> target:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(change) userInfo:<span class="literal">nil</span> repeats:<span class="literal">YES</span>];</span><br><span class="line">    </span><br><span class="line">    [_timer fire];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.userInteractionEnabled = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    _reEnableProgressView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, _reEnableProgressView.frame.size.height);</span><br><span class="line">    </span><br><span class="line">    [<span class="built_in">UIView</span> animateWithDuration:_reEnableTimeInterval animations:^&#123;</span><br><span class="line">        </span><br><span class="line">        _reEnableProgressView.frame = <span class="keyword">self</span>.bounds;</span><br><span class="line">        </span><br><span class="line">    &#125; completion:^(<span class="built_in">BOOL</span> finished) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.userInteractionEnabled = <span class="literal">YES</span>;</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)changToNormal &#123;</span><br><span class="line">    </span><br><span class="line">    [_timer invalidate];</span><br><span class="line">    </span><br><span class="line">    _timerInteger = _reEnableTimeInterval;</span><br><span class="line">    </span><br><span class="line">    [_reEnableProgressView.layer removeAllAnimations];</span><br><span class="line">    </span><br><span class="line">    _titleLabel.text = <span class="string">@"获取验证码"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setProgressViewBgColor:(<span class="built_in">UIColor</span> *)progressViewBgColor &#123;</span><br><span class="line">    </span><br><span class="line">    _progressViewBgColor = progressViewBgColor;</span><br><span class="line">    </span><br><span class="line">    _reEnableProgressView.backgroundColor = progressViewBgColor;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>平时写代码有一个坏习惯，就是实现文件不喜欢写注释。这里简单解释一下上面的代码，在初始化方法中向<code>XKCaptchaView</code>添加了<code>reEnableProgressView</code>进度View，显示文字的<code>titleLabel</code>，并且初始化了一些默认的配置信息。向<code>XKCaptchaView</code>添加了单击手势，用来接收处理点击事件。最主要的方法就是<code>- (void)startAnimation</code>这个方法，在这个方法中，初始化了定时器，开始动画之后，<code>XKCaptchaView</code>便不再响应用户操作，直到动画完成，或者手动调用<code>- (void)changToNormal</code>方法。设置<code>reEnableProgressView</code>的<code>frame</code>，然后根据<code>reEnableTimeInterval</code>改变其宽度。定时器每秒执行一次<code>- (void)change</code>方法，在这个方法中改变<code>titleLabel</code>上的文字，当<code>timerInteger</code>为0时，停止定时器，还原<code>titleLabel</code>。<code>- (void)changToNormal</code>该方法是用来还原整个控件的状态的，需要手动调用。这个方法存在的意义是，点击控件发起网络请求去获取验证码，验证码获取成功了之后，<code>reEnableProgressView</code>就没有继续做动画的必要了。所以这里提供这样一个方法。<code>- (void)changToNormal</code>里面也都是简单的操作，首先停止定时器，重新将<code>reEnableTimeInterval</code>赋值给<code>timerInteger</code>，移除<code>reEnableProgressView</code>的动画，还原<code>titleLabel</code>。这里不用将<code>XKCaptchaView</code>的<code>userInteractionEnabled</code>设置为<code>YES</code>。因为在移除<code>reEnableProgressView</code>动画的时候，会执行<code>UIView</code>动画的<code>completion</code>回调。最终，我们就实现了这样一个简单的需求。</p><h3 id="简单的使用"><a href="#简单的使用" class="headerlink" title="简单的使用"></a>简单的使用</h3><p>在控制器中简单使用自定义的<code>XKCaptchaView</code>测试一下看看是否满足需求。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"ViewController.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"XKCaptchaView.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) XKCaptchaView *captchaView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:<span class="keyword">self</span>.captchaView];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (XKCaptchaView *)captchaView &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!_captchaView) &#123;</span><br><span class="line">        </span><br><span class="line">        _captchaView = [[XKCaptchaView alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">150</span>, <span class="number">30</span>) reEnableTimeInterval:<span class="number">60</span> actionBlock:^(XKCaptchaView *view) &#123;</span><br><span class="line">            </span><br><span class="line">            [view startAnimation];</span><br><span class="line">            </span><br><span class="line">            dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(<span class="number">10</span> * <span class="built_in">NSEC_PER_SEC</span>)), dispatch_get_main_queue(), ^&#123;</span><br><span class="line">                </span><br><span class="line">                [[[<span class="built_in">UIAlertView</span> alloc] initWithTitle:<span class="string">@"温馨提示"</span> message:<span class="string">@"验证码获取成功"</span> delegate:<span class="literal">nil</span> cancelButtonTitle:<span class="string">@"我知道了"</span> otherButtonTitles:<span class="literal">nil</span>, <span class="literal">nil</span>] show];</span><br><span class="line">                </span><br><span class="line">                [<span class="keyword">self</span>.captchaView changToNormal];</span><br><span class="line">                </span><br><span class="line">            &#125;);</span><br><span class="line">            </span><br><span class="line">        &#125;];</span><br><span class="line">        </span><br><span class="line">        _captchaView.center = <span class="keyword">self</span>.view.center;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _captchaView;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>最终的效果如图</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-0af13d1a6df734cc.gif?imageMogr2/auto-orient/strip" alt="最终效果图.gif"></p><p>这就是一个简单获取验证码控件的封装，虽然功能简单，但是该有的都有。全部的代码都已经贴出来了。如果你没有时间阅读源码而你又需要这个小控件的话 <a href="https://github.com/jhchenchong/XKCaptchaView.git" target="_blank" rel="noopener">传送门在这里</a><br>如果你在阅读或者使用的过程中发现错误或者有什么更好的建议，欢迎留言指出。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;p&gt;在日常的开发过程中，获取验证码是一个常见的功能。一般情况下，为了提高用户体验，产品都会在点击获取验证码之后，让这个点击控件做一个渐变动画，设置一个时长，然后可以点击重新获取。这是一个非常简单且经常用到的功能，可以考虑将这个小控件直接封装出来，方便随时使用。&lt;/p&gt;
&lt;h3 id=&quot;实现效果&quot;&gt;&lt;a href=&quot;#实现效果&quot; class=&quot;headerlink&quot; title=&quot;实现效果&quot;&gt;&lt;/a&gt;实现效果&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1777873-110fedabc97ea4c4.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;效果.gif&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="验证码" scheme="http://localhost:4000/tags/%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    
      <category term="自定义视图" scheme="http://localhost:4000/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%86%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>有趣的过山车动画</title>
    <link href="http://localhost:4000/2018/01/12/OC%E5%AE%9E%E7%8E%B0%E6%9C%89%E8%B6%A3%E7%9A%84%E8%BF%87%E5%B1%B1%E8%BD%A6%E5%8A%A8%E7%94%BB/"/>
    <id>http://localhost:4000/2018/01/12/OC实现有趣的过山车动画/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:55:49.842Z</updated>
    
    <content type="html"><![CDATA[<p>在网上看到一个有趣的过山车动画，有大神用swift实现了。我参照着用OC实现了一遍，我们不生产代码，只是代码的搬运工。</p><p>动画如图所示：<br><img src="http://upload-images.jianshu.io/upload_images/1777873-7cecaf5752f19324.gif?imageMogr2/auto-orient/strip" alt="过山车动画.gif"></p><h3 id="实现动画主要使用到的类："><a href="#实现动画主要使用到的类：" class="headerlink" title="实现动画主要使用到的类："></a>实现动画主要使用到的类：</h3><ul><li>CAShapeLayer</li><li>CAGradientLayer</li><li>CAKeyframeAnimation</li></ul><h3 id="实现思路："><a href="#实现思路：" class="headerlink" title="实现思路："></a>实现思路：</h3><p>渐变的背景用CAGradientLayer实现，山峰，草坪和轨道利用CAShapeLayer配合UIBezierPath实现，云，树和大地都是图片资源，直接通过设置CALayer的contents实现。动画实现使用的是CAKeyframeAnimation。代码如下：<a href="https://github.com/jhchenchong/rollerCoasterAnimation.git" target="_blank" rel="noopener">过山车动画OC</a></p><a id="more"></a><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"ViewController.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">CALayer</span> *groundLayer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">CAShapeLayer</span> *yellowPath;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">CAShapeLayer</span> *greenPath;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">NSInteger</span> count;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">NSInteger</span> count1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    _count = <span class="number">0</span>;</span><br><span class="line">    _count1 = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGSize</span> size = <span class="keyword">self</span>.view.frame.size;</span><br><span class="line">    [<span class="keyword">self</span> createGradientLayerWithSize:size];</span><br><span class="line">    [<span class="keyword">self</span> createMountainLayerWithSize:size];</span><br><span class="line">    [<span class="keyword">self</span> createGrasslandlayerWithSize:size];</span><br><span class="line">    </span><br><span class="line">    _groundLayer = [<span class="keyword">self</span> createGroundLayerWithSize:size];</span><br><span class="line">    _yellowPath = [<span class="keyword">self</span> createYellowPathLayerWithSize:size];</span><br><span class="line">    _greenPath = [<span class="keyword">self</span> createGreenPathLayerWithSize:size];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> addTreeLayeWithSize:size];</span><br><span class="line">    </span><br><span class="line">    [<span class="built_in">NSTimer</span> scheduledTimerWithTimeInterval:<span class="number">0.092</span> target:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(startAnimated:) userInfo:<span class="literal">nil</span> repeats:<span class="literal">YES</span>];</span><br><span class="line">    [<span class="built_in">NSTimer</span> scheduledTimerWithTimeInterval:<span class="number">0.095</span> target:<span class="keyword">self</span> selector:<span class="keyword">@selector</span>(startAnimated1:) userInfo:<span class="literal">nil</span> repeats:<span class="literal">YES</span>];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> addCloudAnimationWithSize:size];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)startAnimated:(<span class="built_in">NSTimer</span> *)timer</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (_count == <span class="number">5</span>) &#123;</span><br><span class="line">        [timer invalidate];</span><br><span class="line">        timer = <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span> addYellowCarPathAnimation];</span><br><span class="line">    _count ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)startAnimated1:(<span class="built_in">NSTimer</span> *)timer</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (_count1 == <span class="number">5</span>) &#123;</span><br><span class="line">        [timer invalidate];</span><br><span class="line">        timer = <span class="literal">nil</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span> addGreenCarPathAnimationWithSize:<span class="keyword">self</span>.view.frame.size];</span><br><span class="line">    _count1 ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">CGFloat</span>)getPoint:(<span class="built_in">CGPoint</span>)pointOne pointTow:(<span class="built_in">CGPoint</span>)pointTow referenceX:(<span class="built_in">CGFloat</span>)referenceX</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CGFloat</span> x1 = pointOne.x;</span><br><span class="line">    <span class="built_in">CGFloat</span> y1 = pointOne.y;</span><br><span class="line">    <span class="built_in">CGFloat</span> x2 = pointTow.x;</span><br><span class="line">    <span class="built_in">CGFloat</span> y2 = pointTow.y;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> a,b;</span><br><span class="line">    a = (y2 - y1) / (x2 - x1);</span><br><span class="line">    b = y1 - a * x1;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> y = a * referenceX + b;</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">CAGradientLayer</span> *)createGradientLayerWithSize:(<span class="built_in">CGSize</span>)size</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CAGradientLayer</span> *layer = [<span class="built_in">CAGradientLayer</span> layer];</span><br><span class="line">    layer.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, size.width, size.height - <span class="number">20</span>);</span><br><span class="line">    layer.colors = @[(__bridge <span class="keyword">id</span>)[[<span class="built_in">UIColor</span> alloc] initWithRed:<span class="number">178.0</span>/<span class="number">255.0</span> green:<span class="number">226.0</span>/<span class="number">255.0</span> blue:<span class="number">248.0</span>/<span class="number">255.0</span> alpha:<span class="number">1</span>].CGColor,(__bridge <span class="keyword">id</span>)[[<span class="built_in">UIColor</span> alloc] initWithRed:<span class="number">232.0</span>/<span class="number">255.0</span> green:<span class="number">244.0</span>/<span class="number">255.0</span> blue:<span class="number">193.0</span>/<span class="number">255.0</span> alpha:<span class="number">1</span>].CGColor];</span><br><span class="line">    layer.startPoint = <span class="built_in">CGPointMake</span>(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    layer.endPoint = <span class="built_in">CGPointMake</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    [<span class="keyword">self</span>.view.layer addSublayer:layer];</span><br><span class="line">    <span class="keyword">return</span> layer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)createMountainLayerWithSize:(<span class="built_in">CGSize</span>)size</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *mountainOne = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    <span class="built_in">UIBezierPath</span> *pathOne = [[<span class="built_in">UIBezierPath</span> alloc] init];</span><br><span class="line">    [pathOne moveToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height - <span class="number">100</span>)];</span><br><span class="line">    [pathOne addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">100</span>, <span class="number">100</span>)];</span><br><span class="line">    [pathOne addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">3</span>, size.height - <span class="number">100</span>)];</span><br><span class="line">    [pathOne addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.5</span>, size.width - <span class="number">50</span>)];</span><br><span class="line">    [pathOne addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height)];</span><br><span class="line">    mountainOne.path = pathOne.CGPath;</span><br><span class="line">    mountainOne.fillColor = [<span class="built_in">UIColor</span> whiteColor].CGColor;</span><br><span class="line">    [<span class="keyword">self</span>.view.layer addSublayer:mountainOne];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *mountainOneLayer = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    <span class="built_in">UIBezierPath</span> *pathLayerOne = [[<span class="built_in">UIBezierPath</span> alloc] init];</span><br><span class="line">    [pathLayerOne moveToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height - <span class="number">120</span>)];</span><br><span class="line">    <span class="built_in">CGFloat</span> pathOneHeight = [<span class="keyword">self</span> getPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height - <span class="number">120</span>) pointTow:<span class="built_in">CGPointMake</span>(<span class="number">100</span>, <span class="number">100</span>) referenceX:<span class="number">55</span>];</span><br><span class="line">    <span class="built_in">CGFloat</span> pathTwoHeight = [<span class="keyword">self</span> getPoint:<span class="built_in">CGPointMake</span>(<span class="number">100</span>, <span class="number">100</span>) pointTow:<span class="built_in">CGPointMake</span>(size.width / <span class="number">3</span>, size.height - <span class="number">100</span>) referenceX:<span class="number">160</span>];</span><br><span class="line">    [pathLayerOne addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">55</span>, pathOneHeight)];</span><br><span class="line">    [pathLayerOne addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">70</span>, pathOneHeight + <span class="number">15</span>)];</span><br><span class="line">    [pathLayerOne addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">90</span>, pathOneHeight)];</span><br><span class="line">    [pathLayerOne addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">110</span>, pathOneHeight + <span class="number">25</span>)];</span><br><span class="line">    [pathLayerOne addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">130</span>, pathOneHeight - <span class="number">5</span>)];</span><br><span class="line">    [pathLayerOne addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">160</span>, pathTwoHeight)];</span><br><span class="line">    </span><br><span class="line">    [pathLayerOne addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">3</span>, size.height - <span class="number">100</span>)];</span><br><span class="line">    [pathLayerOne addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.5</span>, size.height - <span class="number">50</span>)];</span><br><span class="line">    [pathLayerOne addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height)];</span><br><span class="line">    mountainOneLayer.path = pathLayerOne.CGPath;</span><br><span class="line">    mountainOneLayer.fillColor = [[<span class="built_in">UIColor</span> alloc] initWithRed:<span class="number">104.0</span>/<span class="number">255.0</span> green:<span class="number">92.0</span>/<span class="number">255.0</span> blue:<span class="number">157.0</span>/<span class="number">255.0</span> alpha:<span class="number">1</span>].CGColor;</span><br><span class="line">    [<span class="keyword">self</span>.view.layer addSublayer:mountainOneLayer];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *mountainTwo = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    <span class="built_in">UIBezierPath</span> *pathTwo = [[<span class="built_in">UIBezierPath</span> alloc] init];</span><br><span class="line">    [pathTwo moveToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">4</span>, size.height - <span class="number">90</span>)];</span><br><span class="line">    [pathTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">2.7</span>, <span class="number">200</span>)];</span><br><span class="line">    [pathTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.8</span>, size.height - <span class="number">85</span>)];</span><br><span class="line">    [pathTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.6</span>, size.height - <span class="number">125</span>)];</span><br><span class="line">    [pathTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.35</span>, size.height - <span class="number">70</span>)];</span><br><span class="line">    [pathTwo addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height)];</span><br><span class="line">    mountainTwo.path = pathTwo.CGPath;</span><br><span class="line">    mountainTwo.fillColor = [<span class="built_in">UIColor</span> whiteColor].CGColor;</span><br><span class="line">    [<span class="keyword">self</span>.view.layer insertSublayer:mountainTwo below:mountainOne];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *mountainTwoLayer = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    <span class="built_in">UIBezierPath</span> *pathLayerTwo = [[<span class="built_in">UIBezierPath</span> alloc] init];</span><br><span class="line">    [pathLayerTwo moveToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">4</span>, size.height - <span class="number">90</span>)];</span><br><span class="line">    pathOneHeight = [<span class="keyword">self</span> getPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">4</span>, size.height - <span class="number">90</span>) pointTow:<span class="built_in">CGPointMake</span>(size.width / <span class="number">2.7</span>, <span class="number">200</span>) referenceX:size.width / <span class="number">4</span> + <span class="number">50</span>];</span><br><span class="line">    pathTwoHeight = [<span class="keyword">self</span> getPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.8</span>, size.height - <span class="number">85</span>) pointTow:<span class="built_in">CGPointMake</span>(size.width / <span class="number">2.7</span>, <span class="number">200</span>) referenceX:size.width / <span class="number">2.2</span>];</span><br><span class="line">    <span class="built_in">CGFloat</span> pathThreeHeight = [<span class="keyword">self</span> getPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.8</span>, size.height - <span class="number">85</span>) pointTow:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.6</span>, size.height - <span class="number">125</span>) referenceX:size.width / <span class="number">1.67</span>];</span><br><span class="line">    <span class="built_in">CGFloat</span> pathFourHeight = [<span class="keyword">self</span> getPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.35</span>, size.height - <span class="number">70</span>) pointTow:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.6</span>, size.height - <span class="number">125</span>) referenceX:size.width / <span class="number">1.50</span>];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">4</span> + <span class="number">50</span>, pathOneHeight)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">4</span> + <span class="number">70</span>, pathOneHeight + <span class="number">15</span>)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">4</span> + <span class="number">90</span>, pathOneHeight)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">4</span> + <span class="number">110</span>, pathOneHeight + <span class="number">15</span>)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">2.2</span>, pathTwoHeight)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.8</span>, size.height - <span class="number">85</span>)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.67</span>, pathThreeHeight)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.65</span>, pathThreeHeight + <span class="number">5</span>)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.60</span>, pathThreeHeight - <span class="number">2</span>)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.58</span>, pathFourHeight + <span class="number">2</span>)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.55</span>, pathFourHeight - <span class="number">5</span>)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.50</span>, pathFourHeight)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.35</span>, size.height - <span class="number">70</span>)];</span><br><span class="line">    [pathLayerTwo addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height)];</span><br><span class="line">    </span><br><span class="line">    mountainTwoLayer.path = pathLayerTwo.CGPath;</span><br><span class="line">    mountainTwoLayer.fillColor = [[<span class="built_in">UIColor</span> alloc] initWithRed:<span class="number">75.0</span>/<span class="number">255.0</span> green:<span class="number">65.0</span>/<span class="number">255.0</span> blue:<span class="number">111.0</span>/<span class="number">255.0</span> alpha:<span class="number">1.0</span>].CGColor;</span><br><span class="line">    [<span class="keyword">self</span>.view.layer insertSublayer:mountainTwoLayer below:mountainOne];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSArray</span>&lt;<span class="built_in">CAShapeLayer</span> *&gt; *)createGrasslandlayerWithSize:(<span class="built_in">CGSize</span>)size</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *grasslandOne = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    <span class="built_in">UIBezierPath</span> *patnOne = [[<span class="built_in">UIBezierPath</span> alloc] init];</span><br><span class="line">    [patnOne moveToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height - <span class="number">20</span>)];</span><br><span class="line">    [patnOne addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height - <span class="number">100</span>)];</span><br><span class="line">    [patnOne addQuadCurveToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">3.0</span>, size.height - <span class="number">20</span>) controlPoint:<span class="built_in">CGPointMake</span>(size.width, size.height - <span class="number">100</span>)];</span><br><span class="line">    grasslandOne.path = patnOne.CGPath;</span><br><span class="line">    </span><br><span class="line">    grasslandOne.fillColor = [[<span class="built_in">UIColor</span> alloc] initWithRed:<span class="number">82.0</span>/<span class="number">255.0</span> green:<span class="number">177.0</span>/<span class="number">255.0</span> blue:<span class="number">44.0</span>/<span class="number">255.0</span> alpha:<span class="number">1.0</span>].CGColor;</span><br><span class="line">    [<span class="keyword">self</span>.view.layer addSublayer:grasslandOne];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *grasslandTwo = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    <span class="built_in">UIBezierPath</span> *pathTwo = [[<span class="built_in">UIBezierPath</span> alloc] init];</span><br><span class="line">    [pathTwo moveToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height - <span class="number">20</span>)];</span><br><span class="line">    [pathTwo addQuadCurveToPoint:<span class="built_in">CGPointMake</span>(size.width, size.height - <span class="number">60</span>) controlPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">2.0</span>, size.height - <span class="number">100</span>)];</span><br><span class="line">    [pathTwo addLineToPoint:<span class="built_in">CGPointMake</span>(size.width, size.height - <span class="number">20</span>)];</span><br><span class="line">    grasslandTwo.path = pathTwo.CGPath;</span><br><span class="line">    grasslandTwo.fillColor = [[<span class="built_in">UIColor</span> alloc] initWithRed:<span class="number">92.0</span>/<span class="number">255.0</span> green:<span class="number">195.0</span>/<span class="number">255.0</span> blue:<span class="number">52.0</span>/<span class="number">255.0</span> alpha:<span class="number">1.0</span>].CGColor;</span><br><span class="line">    [<span class="keyword">self</span>.view.layer addSublayer:grasslandTwo];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> @[grasslandOne, grasslandTwo];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">CALayer</span> *)createGroundLayerWithSize:(<span class="built_in">CGSize</span>)size</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CALayer</span> *ground = [<span class="built_in">CALayer</span> layer];</span><br><span class="line">    ground.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, size.height - <span class="number">20</span>, size.width, <span class="number">20</span>);</span><br><span class="line">    ground.backgroundColor = [[<span class="built_in">UIColor</span> alloc] initWithPatternImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"7"</span>]].CGColor;</span><br><span class="line">    [<span class="keyword">self</span>.view.layer addSublayer:ground];</span><br><span class="line">    <span class="keyword">return</span> ground;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">CAShapeLayer</span> *)createYellowPathLayerWithSize:(<span class="built_in">CGSize</span>)size</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *calayer = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    calayer.backgroundColor = [<span class="built_in">UIColor</span> redColor].CGColor;</span><br><span class="line">    calayer.lineWidth = <span class="number">5</span>;</span><br><span class="line">    calayer.strokeColor = [[<span class="built_in">UIColor</span> alloc] initWithRed:<span class="number">210.0</span>/<span class="number">255.0</span> green:<span class="number">179.0</span>/<span class="number">255.0</span> blue:<span class="number">54.0</span>/<span class="number">255.0</span> alpha:<span class="number">1.0</span>].CGColor;</span><br><span class="line">    <span class="built_in">UIBezierPath</span> *path = [[<span class="built_in">UIBezierPath</span> alloc] init];</span><br><span class="line">    [path moveToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height - <span class="number">70</span>)];</span><br><span class="line">    [path addCurveToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.5</span>, <span class="number">200</span>) controlPoint1:<span class="built_in">CGPointMake</span>(size.width / <span class="number">6</span>, size.height - <span class="number">200</span>) controlPoint2:<span class="built_in">CGPointMake</span>(size.width / <span class="number">2.5</span>, size.height + <span class="number">50</span>)];</span><br><span class="line">    [path addQuadCurveToPoint:<span class="built_in">CGPointMake</span>(size.width + <span class="number">10</span>, size.height / <span class="number">3</span>) controlPoint:<span class="built_in">CGPointMake</span>(size.width - <span class="number">100</span>, <span class="number">50</span>)];</span><br><span class="line">    [path addLineToPoint:<span class="built_in">CGPointMake</span>(size.width + <span class="number">10</span>, size.height + <span class="number">10</span>)];</span><br><span class="line">    [path addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height + <span class="number">10</span>)];</span><br><span class="line">    calayer.fillColor = [[<span class="built_in">UIColor</span> alloc] initWithPatternImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"2"</span>]].CGColor;</span><br><span class="line">    calayer.path = path.CGPath;</span><br><span class="line">    [<span class="keyword">self</span>.view.layer insertSublayer:calayer below:_groundLayer];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *lineLayer = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    lineLayer.lineCap = kCALineCapRound;</span><br><span class="line">    lineLayer.strokeColor = [<span class="built_in">UIColor</span> whiteColor].CGColor;</span><br><span class="line">    lineLayer.lineDashPattern = @[@<span class="number">1</span>,@<span class="number">5</span>];</span><br><span class="line">    lineLayer.lineWidth = <span class="number">2</span>;</span><br><span class="line">    lineLayer.fillColor = [<span class="built_in">UIColor</span> clearColor].CGColor;</span><br><span class="line">    lineLayer.path = path.CGPath;</span><br><span class="line">    </span><br><span class="line">    [calayer addSublayer:lineLayer];</span><br><span class="line">    <span class="keyword">return</span> calayer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">CAShapeLayer</span> *)createGreenPathLayerWithSize:(<span class="built_in">CGSize</span>)size</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *calayer = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    calayer.backgroundColor = [<span class="built_in">UIColor</span> redColor].CGColor;</span><br><span class="line">    calayer.lineWidth = <span class="number">5</span>;</span><br><span class="line">    calayer.fillRule = kCAFillRuleEvenOdd;</span><br><span class="line">    calayer.strokeColor = [[<span class="built_in">UIColor</span> alloc] initWithRed:<span class="number">0.0</span>/<span class="number">255.0</span> green:<span class="number">147.0</span>/<span class="number">255.0</span> blue:<span class="number">163.0</span>/<span class="number">255.0</span> alpha:<span class="number">1.0</span>].CGColor;</span><br><span class="line">    <span class="built_in">UIBezierPath</span> *path = [[<span class="built_in">UIBezierPath</span> alloc] init];</span><br><span class="line">    path.lineCapStyle = kCGLineCapRound;</span><br><span class="line">    path.lineJoinStyle = kCGLineJoinRound;</span><br><span class="line">    [path moveToPoint:<span class="built_in">CGPointMake</span>(size.width + <span class="number">10</span>, size.height)];</span><br><span class="line">    [path addLineToPoint:<span class="built_in">CGPointMake</span>(size.width + <span class="number">10</span>, size.height - <span class="number">70</span>)];</span><br><span class="line">    [path addQuadCurveToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.8</span>, size.height - <span class="number">70</span>) controlPoint:<span class="built_in">CGPointMake</span>(size.width - <span class="number">120</span>, <span class="number">200</span>)];</span><br><span class="line">    [path addArcWithCenter:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.9</span>, size.height - <span class="number">140</span>) radius:<span class="number">70</span> startAngle:<span class="number">0.5</span> * M_PI endAngle:<span class="number">2.5</span> * M_PI clockwise:<span class="literal">YES</span>];</span><br><span class="line">    [path addCurveToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height - <span class="number">100</span>) controlPoint1:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.8</span> - <span class="number">60</span>, size.height - <span class="number">60</span>) controlPoint2:<span class="built_in">CGPointMake</span>(<span class="number">150</span>, size.height / <span class="number">2.3</span>)];</span><br><span class="line">    [path addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">-100</span>, size.height + <span class="number">10</span>)];</span><br><span class="line">    calayer.fillColor = [<span class="built_in">UIColor</span> clearColor].CGColor;</span><br><span class="line">    calayer.path = path.CGPath;</span><br><span class="line">    [<span class="keyword">self</span>.view.layer insertSublayer:calayer below:_groundLayer];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *greenLayer = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    greenLayer.fillRule = kCAFillRuleEvenOdd;</span><br><span class="line">    greenLayer.strokeColor = [[<span class="built_in">UIColor</span> alloc] initWithRed:<span class="number">0.0</span>/<span class="number">255.0</span> green:<span class="number">147.0</span>/<span class="number">255.0</span> blue:<span class="number">163.0</span>/<span class="number">255.0</span> alpha:<span class="number">1.0</span>].CGColor;</span><br><span class="line">    <span class="built_in">UIBezierPath</span> *greenPath = [[<span class="built_in">UIBezierPath</span> alloc] init];</span><br><span class="line">    [greenPath moveToPoint:<span class="built_in">CGPointMake</span>(size.width + <span class="number">10</span>, size.height)];</span><br><span class="line">    [greenPath addLineToPoint:<span class="built_in">CGPointMake</span>(size.width + <span class="number">10</span>, size.height - <span class="number">70</span>)];</span><br><span class="line">    [greenPath addQuadCurveToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.8</span>, size.height - <span class="number">70</span>) controlPoint:<span class="built_in">CGPointMake</span>(size.width - <span class="number">120</span>, <span class="number">200</span>)];</span><br><span class="line">    [greenPath addCurveToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height - <span class="number">100</span>) controlPoint1:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.8</span> - <span class="number">60</span>, size.height - <span class="number">60</span>) controlPoint2:<span class="built_in">CGPointMake</span>(<span class="number">150</span>, size.height / <span class="number">2.3</span>)];</span><br><span class="line">    [greenPath addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">-100</span>, size.height + <span class="number">10</span>)];</span><br><span class="line">    greenLayer.fillColor = [[<span class="built_in">UIColor</span> alloc] initWithPatternImage:[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"3"</span>]].CGColor;</span><br><span class="line">    greenLayer.path = greenPath.CGPath;</span><br><span class="line">    [<span class="keyword">self</span>.view.layer insertSublayer:greenLayer below:calayer];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CAShapeLayer</span> *lineLayer = [<span class="built_in">CAShapeLayer</span> layer];</span><br><span class="line">    lineLayer.lineCap = kCALineCapRound;</span><br><span class="line">    lineLayer.strokeColor = [<span class="built_in">UIColor</span> whiteColor].CGColor;</span><br><span class="line">    lineLayer.lineDashPattern = @[@<span class="number">1</span>,@<span class="number">5</span>];</span><br><span class="line">    lineLayer.lineWidth = <span class="number">2</span>;</span><br><span class="line">    lineLayer.fillColor = [<span class="built_in">UIColor</span> clearColor].CGColor;</span><br><span class="line">    lineLayer.path = path.CGPath;</span><br><span class="line">    [calayer addSublayer:lineLayer];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> calayer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)addYellowCarPathAnimation</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CALayer</span> *carLayer = [<span class="built_in">CALayer</span> layer];</span><br><span class="line">    carLayer.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">11</span>);</span><br><span class="line">    [carLayer setAffineTransform:<span class="built_in">CGAffineTransformTranslate</span>(carLayer.affineTransform, <span class="number">0</span>, <span class="number">-7</span>)];</span><br><span class="line">    carLayer.contents = (__bridge <span class="keyword">id</span>)[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"6"</span>].CGImage;</span><br><span class="line">    <span class="built_in">CAKeyframeAnimation</span> *animation = [<span class="built_in">CAKeyframeAnimation</span> animationWithKeyPath:<span class="string">@"position"</span>];</span><br><span class="line">    animation.path = [_yellowPath path];</span><br><span class="line">    animation.timingFunction = [<span class="built_in">CAMediaTimingFunction</span> functionWithName:kCAMediaTimingFunctionLinear];</span><br><span class="line">    animation.duration = <span class="number">6</span>;</span><br><span class="line">    animation.repeatCount = MAXFLOAT;</span><br><span class="line">    animation.autoreverses = <span class="literal">NO</span>;</span><br><span class="line">    animation.calculationMode = kCAAnimationCubicPaced;</span><br><span class="line">    animation.rotationMode = kCAAnimationRotateAuto;</span><br><span class="line">    [_yellowPath addSublayer:carLayer];</span><br><span class="line">    [carLayer addAnimation:animation forKey:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)addGreenCarPathAnimationWithSize:(<span class="built_in">CGSize</span>)size</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CALayer</span> *carLayer = [<span class="built_in">CALayer</span> layer];</span><br><span class="line">    carLayer.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">11</span>);</span><br><span class="line">    carLayer.contents = (__bridge <span class="keyword">id</span>)[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"1"</span>].CGImage;</span><br><span class="line">    <span class="built_in">UIBezierPath</span> *path = [[<span class="built_in">UIBezierPath</span> alloc] init];</span><br><span class="line">    path.lineCapStyle = kCGLineCapRound;</span><br><span class="line">    path.lineJoinStyle = kCGLineJoinRound;</span><br><span class="line">    [path moveToPoint:<span class="built_in">CGPointMake</span>(size.width + <span class="number">10</span>, size.height - <span class="number">7</span>)];</span><br><span class="line">    [path addLineToPoint:<span class="built_in">CGPointMake</span>(size.width + <span class="number">10</span>, size.height - <span class="number">77</span>)];</span><br><span class="line">    [path addQuadCurveToPoint:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.8</span>, size.height - <span class="number">77</span>) controlPoint:<span class="built_in">CGPointMake</span>(size.width - <span class="number">120</span>, <span class="number">193</span>)];</span><br><span class="line">    [path addArcWithCenter:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.9</span>, size.height - <span class="number">140</span>) radius:<span class="number">63</span> startAngle:<span class="number">0.5</span> * M_PI endAngle:<span class="number">2.5</span> * M_PI clockwise:<span class="literal">YES</span>];</span><br><span class="line">    [path addCurveToPoint:<span class="built_in">CGPointMake</span>(<span class="number">0</span>, size.height - <span class="number">107</span>) controlPoint1:<span class="built_in">CGPointMake</span>(size.width / <span class="number">1.8</span> - <span class="number">60</span>, size.height - <span class="number">67</span>) controlPoint2:<span class="built_in">CGPointMake</span>(<span class="number">150</span>, size.height / <span class="number">2.3</span>)];</span><br><span class="line">    [path addLineToPoint:<span class="built_in">CGPointMake</span>(<span class="number">-100</span>, size.height + <span class="number">7</span>)];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CAKeyframeAnimation</span> *animation = [<span class="built_in">CAKeyframeAnimation</span> animationWithKeyPath:<span class="string">@"position"</span>];</span><br><span class="line">    animation.path = path.CGPath;</span><br><span class="line">    animation.timingFunction = [<span class="built_in">CAMediaTimingFunction</span> functionWithName:kCAMediaTimingFunctionLinear];</span><br><span class="line">    animation.duration = <span class="number">6</span>;</span><br><span class="line">    animation.repeatCount = MAXFLOAT;</span><br><span class="line">    animation.autoreverses = <span class="literal">NO</span>;</span><br><span class="line">    animation.calculationMode = kCAAnimationCubicPaced;</span><br><span class="line">    animation.rotationMode = kCAAnimationRotateAuto;</span><br><span class="line">    [<span class="keyword">self</span>.view.layer addSublayer:carLayer];</span><br><span class="line">    </span><br><span class="line">    [carLayer addAnimation:animation forKey:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">CALayer</span> *)addCloudAnimationWithSize:(<span class="built_in">CGSize</span>)size</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">CALayer</span> *cloudLayer = [<span class="built_in">CALayer</span> layer];</span><br><span class="line">    cloudLayer.contents = (__bridge <span class="keyword">id</span>)[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"5"</span>].CGImage;</span><br><span class="line">    cloudLayer.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">63</span>, <span class="number">20</span>);</span><br><span class="line">    [<span class="keyword">self</span>.view.layer addSublayer:cloudLayer];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIBezierPath</span> *path = [[<span class="built_in">UIBezierPath</span> alloc] init];</span><br><span class="line">    [path moveToPoint:<span class="built_in">CGPointMake</span>(size.width + <span class="number">63</span>, <span class="number">40</span>)];</span><br><span class="line">    [path addLineToPoint:<span class="built_in">CGPointMake</span>(- <span class="number">63</span>, <span class="number">40</span>)];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CAKeyframeAnimation</span> *animation = [<span class="built_in">CAKeyframeAnimation</span> animationWithKeyPath:<span class="string">@"position"</span>];</span><br><span class="line">    animation.path = path.CGPath;</span><br><span class="line">    animation.duration = <span class="number">40</span>;</span><br><span class="line">    animation.repeatCount = MAXFLOAT;</span><br><span class="line">    animation.autoreverses = <span class="literal">NO</span>;</span><br><span class="line">    animation.calculationMode = kCAAnimationCubicPaced;</span><br><span class="line">    [cloudLayer addAnimation:animation forKey:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cloudLayer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)addTreeLayeWithSize:(<span class="built_in">CGSize</span>)size</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i ++) &#123;</span><br><span class="line">        <span class="built_in">CALayer</span> *treeOne = [<span class="built_in">CALayer</span> layer];</span><br><span class="line">        treeOne.contents = (__bridge <span class="keyword">id</span>)[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"4"</span>].CGImage;</span><br><span class="line">        treeOne.frame = <span class="built_in">CGRectMake</span>([@[@<span class="number">5</span>,@<span class="number">55</span>,@<span class="number">70</span>,@(size.width / <span class="number">3</span> + <span class="number">15</span>),@(size.width / <span class="number">3</span> + <span class="number">25</span>), @(size.width - <span class="number">130</span>),@(size.width - <span class="number">160</span>)][i] floatValue], size.height - <span class="number">43</span>, <span class="number">13</span>, <span class="number">23</span>);</span><br><span class="line">        [<span class="keyword">self</span>.view.layer addSublayer:treeOne];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i ++) &#123;</span><br><span class="line">        <span class="built_in">CALayer</span> *treeOne = [<span class="built_in">CALayer</span> layer];</span><br><span class="line">        treeOne.contents = (__bridge <span class="keyword">id</span>)[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"4"</span>].CGImage;</span><br><span class="line">        treeOne.frame = <span class="built_in">CGRectMake</span>([@[@<span class="number">10</span>,@<span class="number">60</span>,@(size.width / <span class="number">3</span>),@(size.width - <span class="number">150</span>)][i] floatValue], size.height - <span class="number">52</span>, <span class="number">18</span>, <span class="number">32</span>);</span><br><span class="line">        [<span class="keyword">self</span>.view.layer addSublayer:treeOne];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i ++) &#123;</span><br><span class="line">        <span class="built_in">CALayer</span> *treeOne = [<span class="built_in">CALayer</span> layer];</span><br><span class="line">        treeOne.contents = (__bridge <span class="keyword">id</span>)[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"4"</span>].CGImage;</span><br><span class="line">        treeOne.frame = <span class="built_in">CGRectMake</span>([@[@(size.width - <span class="number">210</span>),@(size.width - <span class="number">50</span>)][i] floatValue], [@[@(size.height - <span class="number">75</span>),@(size.height - <span class="number">80</span>)][i] floatValue], <span class="number">18</span>, <span class="number">32</span>);</span><br><span class="line">        [<span class="keyword">self</span>.view.layer addSublayer:treeOne];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i ++) &#123;</span><br><span class="line">        <span class="built_in">CALayer</span> *treeOne = [<span class="built_in">CALayer</span> layer];</span><br><span class="line">        treeOne.contents = (__bridge <span class="keyword">id</span>)[<span class="built_in">UIImage</span> imageNamed:<span class="string">@"4"</span>].CGImage;</span><br><span class="line">        treeOne.frame = <span class="built_in">CGRectMake</span>([@[@(size.width - <span class="number">235</span>),@(size.width - <span class="number">220</span>), @(size.width - <span class="number">40</span>)][i] floatValue], [@[@(size.height - <span class="number">67</span>),@(size.height - <span class="number">67</span>),@(size.height - <span class="number">72</span>)][i] floatValue], <span class="number">13</span>, <span class="number">23</span>);</span><br><span class="line">        [<span class="keyword">self</span>.view.layer addSublayer:treeOne];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果有人想要swift版本的，这里留下原作者的博客地址。需要详细了解的小伙伴可以看这里。</p><p><a href="http://blog.csdn.net/wang631106979/article/details/51737456" target="_blank" rel="noopener">原作者博客点这里</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在网上看到一个有趣的过山车动画，有大神用swift实现了。我参照着用OC实现了一遍，我们不生产代码，只是代码的搬运工。&lt;/p&gt;
&lt;p&gt;动画如图所示：&lt;br&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1777873-7cecaf5752f19324.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;过山车动画.gif&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;实现动画主要使用到的类：&quot;&gt;&lt;a href=&quot;#实现动画主要使用到的类：&quot; class=&quot;headerlink&quot; title=&quot;实现动画主要使用到的类：&quot;&gt;&lt;/a&gt;实现动画主要使用到的类：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CAShapeLayer&lt;/li&gt;
&lt;li&gt;CAGradientLayer&lt;/li&gt;
&lt;li&gt;CAKeyframeAnimation&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;实现思路：&quot;&gt;&lt;a href=&quot;#实现思路：&quot; class=&quot;headerlink&quot; title=&quot;实现思路：&quot;&gt;&lt;/a&gt;实现思路：&lt;/h3&gt;&lt;p&gt;渐变的背景用CAGradientLayer实现，山峰，草坪和轨道利用CAShapeLayer配合UIBezierPath实现，云，树和大地都是图片资源，直接通过设置CALayer的contents实现。动画实现使用的是CAKeyframeAnimation。代码如下：&lt;a href=&quot;https://github.com/jhchenchong/rollerCoasterAnimation.git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;过山车动画OC&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="动画" scheme="http://localhost:4000/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>Safe Area Layout Guide before iOS 9.0</title>
    <link href="http://localhost:4000/2018/01/12/Safe-Area-Layout-Guide/"/>
    <id>http://localhost:4000/2018/01/12/Safe-Area-Layout-Guide/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-12T13:52:27.750Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Safe-Area-Layout-Guide-before-iOS-9-0"><a href="#Safe-Area-Layout-Guide-before-iOS-9-0" class="headerlink" title="Safe Area Layout Guide before iOS 9.0"></a>Safe Area Layout Guide before iOS 9.0</h3><p>今天升级了Xcode 9，在使用Xcode 9创建一个iOS 8.0的新项目的时候，报错Safe Area Layout Guide before iOS 9.0。</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>将Main.storyboard和LaunchScreen.storyboard中的Use Safe Area Layout Guide复选框去掉。如图：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-5f24e00494b824d0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="屏幕快照 2017-09-20 下午3.25.30.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Safe-Area-Layout-Guide-before-iOS-9-0&quot;&gt;&lt;a href=&quot;#Safe-Area-Layout-Guide-before-iOS-9-0&quot; class=&quot;headerlink&quot; title=&quot;Safe Area Layout G
      
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS11" scheme="http://localhost:4000/tags/iOS11/"/>
    
  </entry>
  
  <entry>
    <title>WKWebView在iOS8上闪退异常</title>
    <link href="http://localhost:4000/2018/01/12/WKWebView%E5%9C%A8iOS8%E4%B8%8A%E7%9A%84%E9%97%AA%E9%80%80%E5%BC%82%E5%B8%B8/"/>
    <id>http://localhost:4000/2018/01/12/WKWebView在iOS8上的闪退异常/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-12T13:56:29.879Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>项目接近尾声，昨天在测试的时候发现了一个闪退的问题。测试的设备为iPhone5s，系统是iOS 8.3，其他的测试设备都不会崩溃。临近下班，就没有多想，感觉就是一个谜之bug，从Bugly反馈的日志看，也只能看到是因为内存释放出栈异常。一早上班就看了一下这个闪退的问题。记录一下两个小时的爬坑记。</p><h3 id="Bug描述"><a href="#Bug描述" class="headerlink" title="Bug描述"></a>Bug描述</h3><p>设备：iPhone5s，系统：iOS 8.3，在进入一个WKWebView加载的本地html标签的页面，退出该页面必定闪退。而且这个问题只会出现在iOS 10以下的系统。</p><h3 id="为爱Debug"><a href="#为爱Debug" class="headerlink" title="为爱Debug"></a>为爱Debug</h3><p>因为知道是内存释放的问题，所以从<code>dealloc</code>方法入手，发现程序正常的走了<code>dealloc</code>方法，然后就崩溃了。因为这是一个很简单的页面，整个页面就三个控件，WKWebView和两个UIButton，两个Button是根据WKWebView的滚动与否决定显不显示。然后发现只要这个页面有WKWebView就会崩溃。通过分析发现，是因为设置了WKWebView.scrollView.delegate，而scrollView在WKWebView是strong强引用的，而在这个页面监听了scrollView的delegate。解决方法就是在<code>dealloc</code>方法中将delegate置空。<code>WKWebView.scrollView.delegate = nil</code>。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;项目接近尾声，昨天在测试的时候发现了一个闪退的问题。测试的设备为iPhone5s，系统是iOS 8.3，其他的测试设备都不会崩溃。临近下班，
      
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="bug" scheme="http://localhost:4000/tags/bug/"/>
    
      <category term="WKWebView" scheme="http://localhost:4000/tags/WKWebView/"/>
    
  </entry>
  
  <entry>
    <title>UITableViewCell嵌套UIWebView高度自适应 设置字号 拦截图片点击事件</title>
    <link href="http://localhost:4000/2018/01/12/UITableViewCell%E5%B5%8C%E5%A5%97UIWebView%E9%AB%98%E5%BA%A6%E8%87%AA%E9%80%82%E5%BA%94%EF%BC%8C%E8%AE%BE%E7%BD%AE%E5%AD%97%E5%8F%B7%EF%BC%8C%E6%8B%A6%E6%88%AA%E5%9B%BE%E7%89%87%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6%E3%80%82/"/>
    <id>http://localhost:4000/2018/01/12/UITableViewCell嵌套UIWebView高度自适应，设置字号，拦截图片点击事件。/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:56:02.002Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在日常的开发中，在UITableViewCell中嵌套UIWebView应该算是一个很常见的需求。通常，UITableViewCell要去自适应UIWebView的高度，拦截html中的图片点击事件，以及一些新闻类App会改变正文的字号或者字体。这里简单的把这几个需求实现一下。</p><p>最终完成的效果如图(文章结尾处提供源码下载地址)：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-849506c6a9483fd9.gif?imageMogr2/auto-orient/strip" alt="效果图.gif"></p><a id="more"></a><p>直接上代码，自定义UITableViewCell，提供需要的属性供外界访问</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/// WebView完成加载时候的高度</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span>(^WebViewDidFinishLoad)(<span class="built_in">CGFloat</span> height);</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 点击WebView中图片触发的回调</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span>(^WebViewImageClickBlock)(<span class="built_in">NSArray</span> *imageArray,<span class="built_in">NSInteger</span> index);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">XKWebViewCell</span> : <span class="title">UITableViewCell</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) WebViewDidFinishLoad block;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) WebViewImageClickBlock imageClickBlock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *htmlString;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>实现文件，简单的配置一下UIWebView的属性。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"XKWebViewCell.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">XKWebViewCell</span> ()&lt;<span class="title">UIWebViewDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="built_in">UIWebView</span> *webView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> webViewHeight;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSArray</span> *imageArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">XKWebViewCell</span></span></span><br><span class="line"></span><br><span class="line">-(<span class="keyword">id</span>)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier]) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.selectionStyle = <span class="built_in">UITableViewCellSelectionStyleNone</span>;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> initUserInterface];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)initUserInterface &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIWebView</span> *webView = [[<span class="built_in">UIWebView</span> alloc] init];</span><br><span class="line">    </span><br><span class="line">    webView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, [<span class="built_in">UIScreen</span> mainScreen].bounds.size.width, [<span class="built_in">UIScreen</span> mainScreen].bounds.size.height);</span><br><span class="line">    </span><br><span class="line">    webView.delegate = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    webView.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    </span><br><span class="line">    webView.scrollView.bounces = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    webView.scalesPageToFit = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    webView.scrollView.scrollEnabled = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    webView.scrollView.scrollsToTop = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> addSubview:webView];</span><br><span class="line">    </span><br><span class="line">    _webView = webView;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>接下来就是调用UIWebView的loadHTMLString方法去加载标签。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载html标签</span></span><br><span class="line">- (<span class="keyword">void</span>)loadWebHtml &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSURL</span> *cssURL = [<span class="built_in">NSURL</span> fileURLWithPath:[[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@"News"</span> ofType:<span class="string">@"css"</span>]];</span><br><span class="line">    </span><br><span class="line">    [_webView loadHTMLString:[<span class="keyword">self</span> handleWithHtmlBody:_htmlString] baseURL:cssURL];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理请求回来的html标签 将静态的css文件嵌入进去</span></span><br><span class="line">- (<span class="built_in">NSString</span> *)handleWithHtmlBody:(<span class="built_in">NSString</span> *)htmlBody &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *html = [htmlBody stringByReplacingOccurrencesOfString:<span class="string">@"\t"</span> withString:<span class="string">@""</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *cssName = <span class="string">@"News.css"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSMutableString</span> *htmlString =[[<span class="built_in">NSMutableString</span> alloc]initWithString:<span class="string">@"&lt;html&gt;"</span>];</span><br><span class="line">    </span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;head&gt;&lt;meta charset=\"UTF-8\"&gt;"</span>];</span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;link rel =\"stylesheet\" href = \""</span>];</span><br><span class="line">    [htmlString appendString:cssName];</span><br><span class="line">    [htmlString appendString:<span class="string">@"\" type=\"text/css\" /&gt;"</span>];</span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;/head&gt;"</span>];</span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;body&gt;"</span>];</span><br><span class="line">    [htmlString appendString:html];</span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;/body&gt;"</span>];</span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;/html&gt;"</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> htmlString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有一个静态的css文件，里面配置了一些基本的属性。日常开发中，要看后台返回给我们的是有样式的html还是只是返回给了body，这里是只有body的html，自己本地区嵌入的css样式表。</p><p>当外界给self.htmlString赋值时，会调用loadWebHtml这个方法。<br>接下来，就在代理中去处理需求。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)webViewDidFinishLoad:(<span class="built_in">UIWebView</span> *)webView &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 改变html标签字号的大小  修改这里的百分比 可以控制标签的字号</span></span><br><span class="line">    <span class="built_in">NSString</span> *string = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"document.getElementsByTagName('body')[0].style.webkitTextSizeAdjust= '%@'"</span>,<span class="string">@"100%"</span>];</span><br><span class="line">        </span><br><span class="line">    [webView stringByEvaluatingJavaScriptFromString:string];</span><br><span class="line">    <span class="comment">// 获取html的高度</span></span><br><span class="line">    _webViewHeight = [[webView stringByEvaluatingJavaScriptFromString:<span class="string">@"document.body.scrollHeight"</span>] floatValue];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 重新设置webView的高度</span></span><br><span class="line">    <span class="keyword">self</span>.webView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, [<span class="built_in">UIScreen</span> mainScreen].bounds.size.width, <span class="keyword">self</span>.webViewHeight);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 利用block将高度传递出去</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.block) &#123;</span><br><span class="line">        <span class="keyword">self</span>.block(<span class="keyword">self</span>.webViewHeight);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取html中图片的点击事件</span></span><br><span class="line">    [<span class="keyword">self</span>.webView stringByEvaluatingJavaScriptFromString:<span class="string">@"function assignImageClickAction()&#123;var imgs=document.getElementsByTagName('img');var length=imgs.length;for(var i=0; i &lt; length;i++)&#123;img=imgs[i];if(\"ad\" ==img.getAttribute(\"flag\"))&#123;var parent = this.parentNode;if(parent.nodeName.toLowerCase() != \"a\")return;&#125;img.onclick=function()&#123;window.location.href='image-preview:'+this.src&#125;&#125;&#125;"</span>];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.webView stringByEvaluatingJavaScriptFromString:<span class="string">@"assignImageClickAction();"</span>];</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取所有的图片</span></span><br><span class="line">    [<span class="keyword">self</span> getImgs];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)webView:(<span class="built_in">UIWebView</span> *)webView shouldStartLoadWithRequest:(<span class="built_in">NSURLRequest</span> *)request navigationType:(<span class="built_in">UIWebViewNavigationType</span>)navigationType &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ([request.URL isEqual:<span class="string">@"about:blank"</span>]) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// 拦截图片点击事件 将图片点击事件传递给控制器让控制器去做相关操作。</span></span><br><span class="line">    <span class="keyword">if</span> ([request.URL.scheme isEqualToString: <span class="string">@"image-preview"</span>]) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSString</span> *url = [request.URL.absoluteString substringFromIndex:<span class="number">14</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSInteger</span> index = [<span class="keyword">self</span>.imageArray indexOfObject:url];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.imageClickBlock) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span>.imageClickBlock(<span class="keyword">self</span>.imageArray, index);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( navigationType == <span class="built_in">UIWebViewNavigationTypeLinkClicked</span> ) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSString</span> *str = request.URL.absoluteString;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,str);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark -- 私有方法</span></span><br><span class="line">- (<span class="built_in">NSArray</span> *)getImgs</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSMutableArray</span> *arrImgURL = [[<span class="built_in">NSMutableArray</span> alloc] init];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; [<span class="keyword">self</span> nodeCountOfTag:<span class="string">@"img"</span>]; i++) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSString</span> *jsString = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"document.getElementsByTagName('img')[%d].src"</span>, i];</span><br><span class="line">        <span class="built_in">NSString</span> *string = [<span class="keyword">self</span>.webView stringByEvaluatingJavaScriptFromString:jsString];</span><br><span class="line">        </span><br><span class="line">        [arrImgURL addObject:string];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">self</span>.imageArray = arrImgURL;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> arrImgURL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSInteger</span>)nodeCountOfTag:(<span class="built_in">NSString</span> *)tag &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// 获取html中标签的集合 返回标签的个数 如果是图片的话 传入“img”;</span></span><br><span class="line">    <span class="built_in">NSString</span> *jsString = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"document.getElementsByTagName('%@').length"</span>, tag];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> count =  [[<span class="keyword">self</span>.webView stringByEvaluatingJavaScriptFromString:jsString] intValue];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark -- setter</span></span><br><span class="line">- (<span class="keyword">void</span>)setHtmlString:(<span class="built_in">NSString</span> *)htmlString &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (_htmlString != htmlString) &#123;</span><br><span class="line">        </span><br><span class="line">        _htmlString = htmlString;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> loadWebHtml];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面就是自定义cell中的所有内容了，整个实现文件的代码如下，重要的代码在上面都有注释。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"XKWebViewCell.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">XKWebViewCell</span> ()&lt;<span class="title">UIWebViewDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="built_in">UIWebView</span> *webView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> webViewHeight;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSArray</span> *imageArray;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">XKWebViewCell</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)dealloc &#123;</span><br><span class="line">    </span><br><span class="line">    _webView.delegate = <span class="literal">nil</span>;</span><br><span class="line">    </span><br><span class="line">    [_webView loadHTMLString:<span class="string">@""</span> baseURL:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">    _htmlString = <span class="literal">nil</span>;</span><br><span class="line">    </span><br><span class="line">    _webView = <span class="literal">nil</span>;</span><br><span class="line">    </span><br><span class="line">    _webViewHeight = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">-(<span class="keyword">id</span>)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier]) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.selectionStyle = <span class="built_in">UITableViewCellSelectionStyleNone</span>;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> initUserInterface];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)initUserInterface &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIWebView</span> *webView = [[<span class="built_in">UIWebView</span> alloc] init];</span><br><span class="line">    </span><br><span class="line">    webView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, [<span class="built_in">UIScreen</span> mainScreen].bounds.size.width, [<span class="built_in">UIScreen</span> mainScreen].bounds.size.height);</span><br><span class="line">    </span><br><span class="line">    webView.delegate = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    webView.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    </span><br><span class="line">    webView.scrollView.bounces = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    webView.scalesPageToFit = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    webView.scrollView.scrollEnabled = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    webView.scrollView.scrollsToTop = <span class="literal">NO</span>;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> addSubview:webView];</span><br><span class="line">    </span><br><span class="line">    _webView = webView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载html标签</span></span><br><span class="line">- (<span class="keyword">void</span>)loadWebHtml &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSURL</span> *cssURL = [<span class="built_in">NSURL</span> fileURLWithPath:[[<span class="built_in">NSBundle</span> mainBundle] pathForResource:<span class="string">@"News"</span> ofType:<span class="string">@"css"</span>]];</span><br><span class="line">    </span><br><span class="line">    [_webView loadHTMLString:[<span class="keyword">self</span> handleWithHtmlBody:_htmlString] baseURL:cssURL];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理请求回来的html标签 将静态的css文件嵌入进去</span></span><br><span class="line">- (<span class="built_in">NSString</span> *)handleWithHtmlBody:(<span class="built_in">NSString</span> *)htmlBody &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *html = [htmlBody stringByReplacingOccurrencesOfString:<span class="string">@"\t"</span> withString:<span class="string">@""</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSString</span> *cssName = <span class="string">@"News.css"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSMutableString</span> *htmlString =[[<span class="built_in">NSMutableString</span> alloc]initWithString:<span class="string">@"&lt;html&gt;"</span>];</span><br><span class="line">    </span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;head&gt;&lt;meta charset=\"UTF-8\"&gt;"</span>];</span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;link rel =\"stylesheet\" href = \""</span>];</span><br><span class="line">    [htmlString appendString:cssName];</span><br><span class="line">    [htmlString appendString:<span class="string">@"\" type=\"text/css\" /&gt;"</span>];</span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;/head&gt;"</span>];</span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;body&gt;"</span>];</span><br><span class="line">    [htmlString appendString:html];</span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;/body&gt;"</span>];</span><br><span class="line">    [htmlString appendString:<span class="string">@"&lt;/html&gt;"</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> htmlString;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark -- 协议方法</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)webViewDidFinishLoad:(<span class="built_in">UIWebView</span> *)webView &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ([[<span class="built_in">NSUserDefaults</span> standardUserDefaults] objectForKey:<span class="string">@"Font"</span>]) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSArray</span> *array  = [[<span class="built_in">NSUserDefaults</span> standardUserDefaults] objectForKey:<span class="string">@"Font"</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSString</span> *fontSize = array[<span class="number">1</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSString</span> *string = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"document.getElementsByTagName('body')[0].style.webkitTextSizeAdjust= '%@'"</span>,fontSize];</span><br><span class="line">        </span><br><span class="line">        [webView stringByEvaluatingJavaScriptFromString:string];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    _webViewHeight = [[webView stringByEvaluatingJavaScriptFromString:<span class="string">@"document.body.scrollHeight"</span>] floatValue];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.webView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, [<span class="built_in">UIScreen</span> mainScreen].bounds.size.width, <span class="keyword">self</span>.webViewHeight);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.block) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.block(<span class="keyword">self</span>.webViewHeight);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.webView stringByEvaluatingJavaScriptFromString:<span class="string">@"function assignImageClickAction()&#123;var imgs=document.getElementsByTagName('img');var length=imgs.length;for(var i=0; i &lt; length;i++)&#123;img=imgs[i];if(\"ad\" ==img.getAttribute(\"flag\"))&#123;var parent = this.parentNode;if(parent.nodeName.toLowerCase() != \"a\")return;&#125;img.onclick=function()&#123;window.location.href='image-preview:'+this.src&#125;&#125;&#125;"</span>];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.webView stringByEvaluatingJavaScriptFromString:<span class="string">@"assignImageClickAction();"</span>];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> getImgs];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)webView:(<span class="built_in">UIWebView</span> *)webView shouldStartLoadWithRequest:(<span class="built_in">NSURLRequest</span> *)request navigationType:(<span class="built_in">UIWebViewNavigationType</span>)navigationType &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ([request.URL isEqual:<span class="string">@"about:blank"</span>]) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// 拦截图片点击事件 将图片点击事件传递给控制器让控制器去做相关操作。</span></span><br><span class="line">    <span class="keyword">if</span> ([request.URL.scheme isEqualToString: <span class="string">@"image-preview"</span>]) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSString</span> *url = [request.URL.absoluteString substringFromIndex:<span class="number">14</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSInteger</span> index = [<span class="keyword">self</span>.imageArray indexOfObject:url];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>.imageClickBlock) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span>.imageClickBlock(<span class="keyword">self</span>.imageArray, index);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( navigationType == <span class="built_in">UIWebViewNavigationTypeLinkClicked</span> ) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSString</span> *str = request.URL.absoluteString;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,str);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark -- 私有方法</span></span><br><span class="line">- (<span class="built_in">NSArray</span> *)getImgs</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">NSMutableArray</span> *arrImgURL = [[<span class="built_in">NSMutableArray</span> alloc] init];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; [<span class="keyword">self</span> nodeCountOfTag:<span class="string">@"img"</span>]; i++) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSString</span> *jsString = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"document.getElementsByTagName('img')[%d].src"</span>, i];</span><br><span class="line">        <span class="built_in">NSString</span> *string = [<span class="keyword">self</span>.webView stringByEvaluatingJavaScriptFromString:jsString];</span><br><span class="line">        </span><br><span class="line">        [arrImgURL addObject:string];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">self</span>.imageArray = arrImgURL;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> arrImgURL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSInteger</span>)nodeCountOfTag:(<span class="built_in">NSString</span> *)tag &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/// 获取html中标签的集合 返回标签的个数 如果是图片的话 传入“img”;</span></span><br><span class="line">    <span class="built_in">NSString</span> *jsString = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"document.getElementsByTagName('%@').length"</span>, tag];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> count =  [[<span class="keyword">self</span>.webView stringByEvaluatingJavaScriptFromString:jsString] intValue];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark -- setter</span></span><br><span class="line">- (<span class="keyword">void</span>)setHtmlString:(<span class="built_in">NSString</span> *)htmlString &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (_htmlString != htmlString) &#123;</span><br><span class="line">        </span><br><span class="line">        _htmlString = htmlString;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> loadWebHtml];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>自定义cell要做得操作都做完了，接下来将cell显示出来。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"ViewController.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"XKWebViewCell.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()&lt;<span class="title">UITableViewDelegate</span>, <span class="title">UITableViewDataSource</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UITableView</span> *tableView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> webHeight;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.view.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:<span class="keyword">self</span>.tableView];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    </span><br><span class="line">    XKWebViewCell *cell = [tableView dequeueReusableCellWithIdentifier:<span class="string">@"cellID"</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将测试的html赋值一下</span></span><br><span class="line">    cell.htmlString = <span class="string">@"测试的标签"</span>;</span><br><span class="line">    </span><br><span class="line">    __<span class="keyword">weak</span> <span class="keyword">typeof</span>(<span class="keyword">self</span>) weakSelf = <span class="keyword">self</span>;</span><br><span class="line">    cell.block = ^(<span class="built_in">CGFloat</span> webHeight) &#123;</span><br><span class="line">        </span><br><span class="line">        weakSelf.webHeight = webHeight;</span><br><span class="line">        </span><br><span class="line">        [weakSelf.tableView reloadData];</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    cell.imageClickBlock = ^(<span class="built_in">NSArray</span> *imageArray, <span class="built_in">NSInteger</span> index) &#123;</span><br><span class="line">        </span><br><span class="line">        [[[<span class="built_in">UIAlertView</span> alloc] initWithTitle:imageArray[index] message:[<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"第%ld张图片"</span>, index + <span class="number">1</span>] delegate:<span class="keyword">self</span> cancelButtonTitle:<span class="string">@"取消"</span> otherButtonTitles:<span class="literal">nil</span>, <span class="literal">nil</span>] show];</span><br><span class="line">        </span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">CGFloat</span>)tableView:(<span class="built_in">UITableView</span> *)tableView heightForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.webHeight;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UITableView</span> *)tableView &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!_tableView) &#123;</span><br><span class="line">        _tableView = [[<span class="built_in">UITableView</span> alloc] initWithFrame:<span class="keyword">self</span>.view.bounds style:<span class="built_in">UITableViewStylePlain</span>];</span><br><span class="line">        _tableView.dataSource = <span class="keyword">self</span>;</span><br><span class="line">        _tableView.delegate = <span class="keyword">self</span>;</span><br><span class="line">        [_tableView registerClass:[XKWebViewCell <span class="keyword">class</span>] forCellReuseIdentifier:<span class="string">@"cellID"</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _tableView;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>测试的html标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　爱玩网百万稿费活动投稿，作者 浑沌七日死 ，未经授权请勿转载！<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　随着11月的悄然来临，2016年世界范围内最后一个大型游戏展览会——韩国的G-Star也登场了。G-Star作为韩国国内最大的展会、世界范围内第四大展览会，每年都会为玩家呈上众多的游戏大作以及养眼的COSER，但是，对于G-star的你真的了解吗？不妨先跟着笔者来了解一下G-star的历史和现状。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　<span class="tag">&lt;<span class="name">b</span>&gt;</span>G-Star的诞生：韩国游戏力量的整体展示<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　G-Star其实并不是一个简单的游戏展，它的诞生可以说是汇集了韩国国内所有的游戏力量而成。随着韩国游戏的发展，为了扩大韩国游戏的影响力，本着有备无患的心态，韩国G-Star组织委员会于2004年12月宣布将韩国游戏展示会、韩国街机游戏展、韩国数位内容博览会等三大展览会合并，统一为韩国国际游戏展示会，也就是现在的G-Star。可以说每一届的G-Star都是韩国游戏力量的整体展示。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">\</span>"<span class="attr">http:</span>//<span class="attr">img6.cache.netease.com</span>/<span class="attr">game</span>/<span class="attr">2016</span>/<span class="attr">11</span>/<span class="attr">18</span>/<span class="attr">20161118153914a781e.jpg</span>?<span class="attr">w</span>=<span class="string">750&amp;h</span>=<span class="string">20000&amp;quality</span>=<span class="string">75\</span>" <span class="attr">alt</span>=<span class="string">\</span>"在<span class="attr">Gstar</span>排队进场的韩国玩家\" /&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　从2005年11月整合开始，到如今G-Star走过了近11年的历史。作为韩国国内最大的展会，G-Star受到了众多硬件与软件商的喜爱，微软、英伟达、索尼等全球知名的大厂商们纷纷参与其中，这无疑也给G-Star增添了多样化的色彩。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　随着G-Star的发展，当初组织委员会有备无患的前瞻之举亦展示出了它的效用。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　2007年韩国游戏在中国溃败，韩国网游在中国的市场份额更是跌至到20%，这对于曾经雄霸过中国市场的韩国游戏厂商来说是不能接受的。为了挽回江河日下的韩国游戏市场，2007年的G-Star的主题便是“趣味游戏蓬勃产业”。主办方重点强化了展会的商务功能，政府招商的举措也是历届展会中最多的。这届展中举办了全球运营商出口洽谈会、G-Star投资洽谈会等招商会议，以促进韩国游戏的出口。B2B商务馆有63个企业参与，比前一年多出了30家，中国的盛大、腾讯、游戏蜗牛等厂商也都参展B2B馆。韩国政府部门和厂商借G-Star这个平台推销游戏来挽回收入下滑的急切心情可见一斑。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　<span class="tag">&lt;<span class="name">b</span>&gt;</span>G-Star与中国玩家：让人难以自拔的深坑<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　虽然贵为韩国国内第一展，但是由于中国厂商对于ChinaJoy的热捧，G-Star在国内玩家的印象中远远不如ChinaJoy的影响力大。真正让国内玩家有印象并且开始记住这个展会的还是2009年的G-Star。在这年的展览会上，韩国游戏商们展示出次时代级的《剑灵》、《炽焰帝国2》、《龙之谷》、《tear》等多款大作。众多大作云集引发了媒体的高潮，而国内的玩家在见识到如此优秀的画面后纷纷陷入深坑难以自拔。然而《剑灵》直到2013年11月28日才公测；而《TERA》更是被拖至于2014年12月11日才正式与玩家们见面。不得不说，09年的Gstar虽然惊艳，但是这个坑也太深了。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">\</span>"<span class="attr">http:</span>//<span class="attr">img1.cache.netease.com</span>/<span class="attr">game</span>/<span class="attr">2016</span>/<span class="attr">11</span>/<span class="attr">18</span>/<span class="attr">20161118153916831cf.jpg</span>?<span class="attr">w</span>=<span class="string">750&amp;h</span>=<span class="string">20000&amp;quality</span>=<span class="string">75\</span>" <span class="attr">alt</span>=<span class="string">\</span>"曾经剑灵初曝光就吸引了无数玩家的目光\" /&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　纵观G-Star的历史，2009的这一届被无数媒体认为是历届中最成功的一届展览会。在这次展会上，各厂商的次世代新作亮相，而暴雪这种世界级名厂的参展更是让展会本身的吸引力大增。同时各厂商也给玩家提供了尽情体验游戏的空间，并给与充分的帮助说明。比如说让Showgirl更多的扮演为玩家提供游戏说明的角色。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">\</span>"<span class="attr">http:</span>//<span class="attr">img2.cache.netease.com</span>/<span class="attr">game</span>/<span class="attr">2016</span>/<span class="attr">11</span>/<span class="attr">18</span>/<span class="attr">201611181539198dc00.jpg</span>?<span class="attr">w</span>=<span class="string">750&amp;h</span>=<span class="string">20000&amp;quality</span>=<span class="string">75\</span>" <span class="attr">alt</span>=<span class="string">\</span>"美丽的<span class="attr">SG</span>自然也是重点中的重点\" /&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　而彻底让玩家知晓G-Star大名的原因，则是在这次展会上首次实行了分级制度。展览会上分成了18禁、15禁以及通用展台。据媒体报道，成人网络游戏《剑灵》放映馆，《科南时代》、《TERA》试玩台在入口安排相关人员阻止没有入场卡片的游客入场。而15禁的《星际争霸2》展台也是需要玩家必须携带象征着15岁以上的黄色腕带才能入场。这次的分级制度引起了中国媒体的争相报道，这也让国内玩家对于《剑灵》、《TERA》等产品充满了好奇与迷之憧憬。而根据媒体爆料出来的画面来看，这过度性感的游戏人物形象更是引起了国内玩家的沸腾，以至于不少玩家掰着手指头等待这些游戏的测试。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　<span class="tag">&lt;<span class="name">b</span>&gt;</span>扎堆G-Star的中国厂商：从代理争夺到逆输出<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　其实说到参展厂商，国内的厂商诸如盛大、腾讯等，早在2007年就参展过G-Star。作为在中国过的颇为滋润的代理商，对于这个韩国最大的网游出口平台他们自然不可能错过。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　最开始中国厂商参展G-Star除了与韩国游戏商探讨游戏发展、见识次时代游戏内容以外，最重要的自然是发现潜力股并谈妥游戏代理事宜。例如，腾讯虽然是在2011年5月才宣布代理《剑灵》的事宜，但有消息透露，其实早在《剑灵》亮相2009年的G-Star展会之后，腾讯就对它垂涎欲滴。只是谈判的过程一波三折，一直找NCSoft软磨硬泡，整整磨了一年多才成功拿下。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">\</span>"<span class="attr">http:</span>//<span class="attr">img3.cache.netease.com</span>/<span class="attr">game</span>/<span class="attr">2016</span>/<span class="attr">11</span>/<span class="attr">16</span>/<span class="attr">20161116155821ea6f1.jpg</span>?<span class="attr">w</span>=<span class="string">750&amp;h</span>=<span class="string">20000&amp;quality</span>=<span class="string">75\</span>" <span class="attr">alt</span>=<span class="string">""</span> /&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　然而随着游戏行业的人才交替，大量杰出的人才进入中国游戏圈后，国人自主研发的能力得到了迅速提升。在自研拥有了充足的实力后，国内游戏商参展G-Star的另外一个目的自然就是打入韩国市场。例如，2013 G-Star上，网易公布了当时最新的东方幻想风格的3DMMORPG《天谕》，并在展会现场提供了试玩；2015年腾讯在G-Star上发布CG的《天涯明月刀》更是惊艳了一票韩国观众。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">\</span>"<span class="attr">http:</span>//<span class="attr">img6.cache.netease.com</span>/<span class="attr">game</span>/<span class="attr">2016</span>/<span class="attr">11</span>/<span class="attr">18</span>/<span class="attr">2016111815392119ca0.jpg</span>?<span class="attr">w</span>=<span class="string">750&amp;h</span>=<span class="string">20000&amp;quality</span>=<span class="string">75\</span>" <span class="attr">alt</span>=<span class="string">\</span>"网易自研发游戏《战意》就曾经<span class="attr">2015</span>年在<span class="attr">Gstar</span>开启了发布会\" /&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　其实韩国市场一直属于一个成熟而丰硕的游戏市场，仅在2014年韩国游戏市场的规模就已经达到了99,706亿韩元（约582亿元人民币）。而且韩国游戏的市场与中国相似，主要是以PC为主的网络游戏和以手机为主的移动游戏，而不是日本、欧美这样的家用机市场。也正是如此，在同样经过韩国游戏十余年熏陶下的中韩玩家，对于优秀的游戏有着大多数相同的可接受点。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">\</span>"<span class="attr">http:</span>//<span class="attr">img5.cache.netease.com</span>/<span class="attr">game</span>/<span class="attr">2016</span>/<span class="attr">11</span>/<span class="attr">18</span>/<span class="attr">20161118153923d3389.jpg</span>?<span class="attr">w</span>=<span class="string">750&amp;h</span>=<span class="string">20000&amp;quality</span>=<span class="string">75\</span>" <span class="attr">alt</span>=<span class="string">\</span>"韩国游戏市场虽然增长陷入了停滞，但是成熟值得收割\" /&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　例如同样是走精品研发路线的《剑灵》、《天涯明月刀》就一样受到了中韩玩家的喜爱和追捧。而Gstar是韩国国内最大的游戏展，堪比ChinaJoy在我国游戏行业的影响力，在展会上发布的新游戏势必能够受到众多玩家关注，获得更多更大的曝光量。对于展会本身、玩家、游戏商来说是一个三赢局面，也正是如此，所以现在越来越多的国产厂商选择将自己新游戏在Gstar上进行发布。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　其实在这一行为的背后还有着更深的意义。国内网游玩家对于韩国游戏一直有一种亦敌亦友、说不清道不明的感觉在背后。从《传奇》到《永恒之塔》再到《剑灵》，中国大部分90后80后玩家可以说都是在韩国游戏的熏陶下成长的，尽管很多玩家都在鄙视韩国网游，称其为泡菜游戏，然而在面对游戏时，身体却很老实的贴了上去。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　由腾讯代理的《剑灵》国服，虽然游戏后劲不足玩家流失严重，不过游戏在前期却成功吸引了非常多玩家的目光。《剑灵》公测后两个月左右，腾讯就宣布同时在线玩家数突破了150W。由此可见，尽管玩家口中说着不要，但是面对韩国的次时代级游戏却依然控制不住双手陷了进去。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">\</span>"<span class="attr">http:</span>//<span class="attr">img3.cache.netease.com</span>/<span class="attr">game</span>/<span class="attr">2016</span>/<span class="attr">11</span>/<span class="attr">18</span>/<span class="attr">201611181539257b9d3.jpg</span>?<span class="attr">w</span>=<span class="string">750&amp;h</span>=<span class="string">20000&amp;quality</span>=<span class="string">75\</span>" <span class="attr">alt</span>=<span class="string">\</span>"腾讯为《剑灵》投入了大量的资本进行宣传，一度请来了少女时代代言\" /&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　对于国内玩家来说，民族自信心这个东西一直是隐隐存在的。对于韩国游戏十余年在国内的攻城拔寨的行为，很多网游玩家都是对于国产游戏的不争气而愤慨。其中更有不少玩家曾提出，什么时候我们国家也能出一款游戏在韩国的游戏市场中攻城拔寨呢？<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　事实上，近年来国内厂商也确实在朝着这一目标努力着。2015年，网易就曾将战略级PC网游《战意》定名后的首次亮相舞台交给了G-Star 2015游戏展。其实按照常理，正常情况下，国产战略级的端游都应该首发于中国的ChinaJoy。而这次网易却出乎意料的在Gstar首发，目标自然是着眼于Gstar的影响力，以及背后丰硕的韩国游戏市场。而游戏展之后，《战意》亮相韩国Gstar2015并饱受韩国玩家好评的消息传回国内不出意料的引发了国内玩家的新一轮热议。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">\</span>"<span class="attr">http:</span>//<span class="attr">img5.cache.netease.com</span>/<span class="attr">game</span>/<span class="attr">2016</span>/<span class="attr">11</span>/<span class="attr">18</span>/<span class="attr">201611181539272cfb5.jpg</span>?<span class="attr">w</span>=<span class="string">750&amp;h</span>=<span class="string">20000&amp;quality</span>=<span class="string">75\</span>" <span class="attr">alt</span>=<span class="string">\</span>"早在<span class="attr">15</span>年，网易就已经磨刀霍霍意图韩国游戏市场\" /&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　不管游戏的结果如何，仅仅是这一个“在韩国大受好评”报道就能引起国内玩家的热议。可以说国内不少厂商，很早就已经准确的挖掘到了网游玩家背后的那点小心思。《天谕》、《天涯明月刀》再到《战意》，越来越多的国产新游戏纷纷奔向Gstar的舞台，力图从这里开始打入韩国的游戏市场。因为他们知道，一旦自己的游戏在韩国市场成功后，荣归故里之际必然也是一呼百应。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　<span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">'u-link'</span> <span class="attr">href</span>=<span class="string">'http://play.163.com/special/100w/'</span>&gt;</span>欢迎参加——爱玩网百万稿费活动：当金牌作者，开网易专栏，领丰厚稿费，得专属周边！<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">\</span>"<span class="attr">http:</span>//<span class="attr">play.163.com</span>/<span class="attr">special</span>/<span class="attr">100w</span>/\"&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">'u-link'</span> <span class="attr">href</span>=<span class="string">'http://play.163.com/16/0709/18/BRI658Q200314502.html'</span>&gt;</span>详情请看这里<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">\</span>"<span class="attr">http:</span>//<span class="attr">img5.cache.netease.com</span>/<span class="attr">game</span>/<span class="attr">2016</span>/<span class="attr">4</span>/<span class="attr">11</span>/<span class="attr">201604111528227b5ab.jpg</span>?<span class="attr">w</span>=<span class="string">750&amp;h</span>=<span class="string">20000&amp;quality</span>=<span class="string">75\</span>" <span class="attr">alt</span>=<span class="string">\</span>"\" /&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>　　<span class="comment">&lt;!--link2--&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>"</span><br></pre></td></tr></table></figure><p>本地的css样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"utf-8"</span>;</span><br><span class="line"><span class="selector-tag">body</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">font-weight</span>:normal;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">17px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">"Heiti SC"</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#333333</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>:<span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>:<span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>:justify;</span><br><span class="line">    <span class="attribute">background</span>:<span class="number">#ffffff</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#555555</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">border-collapse</span>:collapse;</span><br><span class="line">    <span class="attribute">border-spacing</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> <span class="selector-tag">th</span>,<span class="selector-tag">table</span> <span class="selector-tag">td</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> <span class="number">#cccccc</span></span><br><span class="line">    solid;<span class="attribute">font-weight</span>:normal;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">"Heiti SC"</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#555555</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">5px</span> <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#328fde</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">max-width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">10px</span> auto:</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上，我们就完成了一个自定义UITableViewCell嵌套UIWebView并实现了一些简单的需求。全部的代码都已经贴出来了。思路和代码都很简单。稍微说一个题外话，可能有小伙伴要疑问为什么不用WKWebView，这里说明一下，也可以自己测试，就是如果标签嵌入了本地的css样式，在WKWebView上是显示不正常。我也不知道是不是只有我自己是这样的。如果服务器返回的标签是带样式的，就可以正常显示。如果有谁知道这个到底是为什么，请告知一下。谢谢！</p><p>好了，就写到这里。<a href="https://github.com/jhchenchong/WebViewDemo" target="_blank" rel="noopener">你可以在这里下载源码查看</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在日常的开发中，在UITableViewCell中嵌套UIWebView应该算是一个很常见的需求。通常，UITableViewCell要去自适应UIWebView的高度，拦截html中的图片点击事件，以及一些新闻类App会改变正文的字号或者字体。这里简单的把这几个需求实现一下。&lt;/p&gt;
&lt;p&gt;最终完成的效果如图(文章结尾处提供源码下载地址)：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1777873-849506c6a9483fd9.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;效果图.gif&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="UITableViewCell" scheme="http://localhost:4000/tags/UITableViewCell/"/>
    
      <category term="UIWebView" scheme="http://localhost:4000/tags/UIWebView/"/>
    
  </entry>
  
  <entry>
    <title>iOS中的传值方式</title>
    <link href="http://localhost:4000/2018/01/12/iOS%E4%B8%AD%E7%9A%84%E4%BC%A0%E5%80%BC%E6%96%B9%E5%BC%8F/"/>
    <id>http://localhost:4000/2018/01/12/iOS中的传值方式/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:55:30.405Z</updated>
    
    <content type="html"><![CDATA[<p>在日常开发过程中，我们经常会遇到值传递。这里，介绍几种iOS开发中常见的传值方式。</p><h3 id="1-属性传值"><a href="#1-属性传值" class="headerlink" title="1.属性传值"></a>1.属性传值</h3><p>属性传值是iOS中最为常见的正向传值方式，假定我们现在有这样一个需求，在A控制器点击按钮，将按钮的标题显示在B控制器的label上。首先，我们创建两个控制器CCFirstViewController和CCSecondViewController,在CCSecondViewController.h中声明一个属性</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CCSecondViewController</span> : <span class="title">UIViewController</span></span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSString</span> *buttonTitleString;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CCSecondViewController</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">CCSecondViewController</span></span></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.view.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UILabel</span> *label = [[<span class="built_in">UILabel</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">30</span>)];</span><br><span class="line">    </span><br><span class="line">    label.center = <span class="keyword">self</span>.view.center;</span><br><span class="line">    </span><br><span class="line">    label.text = <span class="keyword">self</span>.buttonTitleString;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:label];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)touchesBegan:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> dismissViewControllerAnimated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>现在，在第二个控制器中已经有了接收按钮标题的属性，接下来，在第一个控制器中添加一个按钮，点击按钮让第一个控制器将按钮标题传递给第二个控制器。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CCFirstViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">CCFirstViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIButton</span> *button = [<span class="built_in">UIButton</span> buttonWithType:<span class="built_in">UIButtonTypeSystem</span>];</span><br><span class="line">    </span><br><span class="line">    button.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">30</span>);</span><br><span class="line">    </span><br><span class="line">    button.center = <span class="keyword">self</span>.view.center;</span><br><span class="line">    </span><br><span class="line">    [button setTitle:<span class="string">@"浪漫恋星空"</span> forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">    </span><br><span class="line">    [button addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(handleButtonEvent:) forControlEvents:<span class="built_in">UIControlEventTouchDragInside</span>];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:button];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)handleButtonEvent:(<span class="built_in">UIButton</span> *)sender &#123;</span><br><span class="line">    </span><br><span class="line">    CCSecondViewController *vc  = [[CCSecondViewController alloc] init];</span><br><span class="line">    </span><br><span class="line">    vc.buttonTitleString = sender.currentTitle;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> presentViewController:vc animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>运行程序，点击第一个控制器的按钮跳转到第二个控制器，我们会发现第二个控制器的label已经有值了。这就是属性传值的简单应用。</p><p>属性传值的基本步骤就是在需要接收值的控制器公开一个属性，在前一个控制器跳转的事件中初始化接收值的控制器，将需要传递的值赋值给接收值的控制器公开的属性，接下来做控制器的跳转。</p><h3 id="2-代理传值"><a href="#2-代理传值" class="headerlink" title="2.代理传值"></a>2.代理传值</h3><p>在日常的开发中，我们遇到的值传递不可能只是简单的正向传递，很多时候我们也需要将第二个控制器中的值传递给前一个控制器，这就是常见的反向传值。属性传值已经不能满足我们的需求了，就需要用到第二种常见的传值方式，代理传值。同样假定一个需求，在B控制器点击按钮，将按钮的标题显示在A控制器的label上。还是用上述两个创建好的控制器完成。<br>简单的将第一个控制器中的label和第二个控制器中的button创建好，为了方便，这里将第一个控制器的跳转事件直接写到touch事件里面（感觉有哪里没对）。接下来，我们需要做的是点击第二个控制器中的按钮，将按钮的标题传回第一个控制器。<br>首先，在需要传值出去的控制器，也就是我们的第二个控制器的.h文件中，声明一个协议，并且声明一个传值需要的协议方法。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明协议以及传值的方法</span></span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">CCSecondViewControllerDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)sendButtonTitleToFirst:(<span class="built_in">NSString</span> *)string;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>接下来，声明一个代理属性。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CCSecondViewController</span> : <span class="title">UIViewController</span></span></span><br><span class="line"><span class="comment">// 声明代理属性（这里要用weak！！！最开始使用代理，都会踩的坑。这里先不做过多解释。）</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="keyword">id</span>&lt;CCSecondViewControllerDelegate&gt; delegate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>然后呢，我们在第二个控制器的按钮点击事件中，让代理响应传值的方法。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)handleButtonEvent:(<span class="built_in">UIButton</span> *)sender &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 判断代理是否存在，并且已经响应了传值方法</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(sendButtonTitleToFirst:)]) &#123;</span><br><span class="line">        <span class="comment">// 传值</span></span><br><span class="line">        [<span class="keyword">self</span>.delegate sendButtonTitleToFirst:sender.currentTitle];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> dismissViewControllerAnimated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要在第二个控制器中做的事已经做完了。去到第一个控制器，在第二个控制器初始化完成的地方，将第二个控制器的代理设置为第一个控制器，遵守代理，然后去实现传值方法。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)touchesBegan:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event &#123;</span><br><span class="line">    </span><br><span class="line">    CCSecondViewController *vc  = [[CCSecondViewController alloc] init];</span><br><span class="line">    <span class="comment">// 设置代理属性</span></span><br><span class="line">    vc.delegate = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> presentViewController:vc animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遵守代理</span></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CCFirstViewController</span> ()&lt;<span class="title">CCSecondViewControllerDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现传值的方法</span></span><br><span class="line">- (<span class="keyword">void</span>)sendButtonTitleToFirst:(<span class="built_in">NSString</span> *)string &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.label.text = string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后呢，好像就没有然后了。。。<br>整理一下现在两个控制器中的代码</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"CCFirstViewController.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"CCSecondViewController.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CCFirstViewController</span> ()&lt;<span class="title">CCSecondViewControllerDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UILabel</span> *label;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">CCFirstViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.view.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UILabel</span> *label = [[<span class="built_in">UILabel</span> alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">30</span>)];</span><br><span class="line">    </span><br><span class="line">    label.center = <span class="keyword">self</span>.view.center;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:label];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.label = label;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)touchesBegan:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event &#123;</span><br><span class="line">    </span><br><span class="line">    CCSecondViewController *vc  = [[CCSecondViewController alloc] init];</span><br><span class="line">    </span><br><span class="line">    vc.delegate = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> presentViewController:vc animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)sendButtonTitleToFirst:(<span class="built_in">NSString</span> *)string &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.label.text = string;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>第二个控制器的.h文件</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">CCSecondViewControllerDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)sendButtonTitleToFirst:(<span class="built_in">NSString</span> *)string;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CCSecondViewController</span> : <span class="title">UIViewController</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="keyword">id</span>&lt;CCSecondViewControllerDelegate&gt; delegate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>.m文件</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CCSecondViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">CCSecondViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.view.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIButton</span> *button = [<span class="built_in">UIButton</span> buttonWithType:<span class="built_in">UIButtonTypeSystem</span>];</span><br><span class="line">    </span><br><span class="line">    button.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">30</span>);</span><br><span class="line">    </span><br><span class="line">    button.center = <span class="keyword">self</span>.view.center;</span><br><span class="line">    </span><br><span class="line">    [button setTitle:<span class="string">@"浪漫恋星空"</span> forState:<span class="built_in">UIControlStateNormal</span>];</span><br><span class="line">    </span><br><span class="line">    [button addTarget:<span class="keyword">self</span> action:<span class="keyword">@selector</span>(handleButtonEvent:) forControlEvents:<span class="built_in">UIControlEventTouchDragInside</span>];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:button];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)handleButtonEvent:(<span class="built_in">UIButton</span> *)sender &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(sendButtonTitleToFirst:)]) &#123;</span><br><span class="line">        [<span class="keyword">self</span>.delegate sendButtonTitleToFirst:sender.currentTitle];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> dismissViewControllerAnimated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>代理传值的基本使用就是这样了。总结一下基本的步骤。</p><ul><li>1.拟定一个代理协议，声明协议方法。</li><li>2.声明代理属性。</li><li>3.使用代理。</li><li>4.设置代理属性。</li><li>5.遵守代理，实现代理方法。</li></ul><h3 id="3-Block传值"><a href="#3-Block传值" class="headerlink" title="3.Block传值"></a>3.Block传值</h3><p>反向传值除了上面说到的代理传值，还有一种常见的传值方式，就是Block传值。上面的反向传值需求再用Block的方式实现一遍。</p><p>首先，在第二个控制器中声明一个Block，通常情况下，为了代码的可读性，我们会为Block取一个别名。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span>(^SendButtonTitleToFirsrBlock)(<span class="built_in">NSString</span> *string);</span><br></pre></td></tr></table></figure><p>上面这一行代码呢，就是给我们的Block取了一个我们想要的名字。结构大致是这样的 。</p><blockquote><p>typedef 返回值类型(^我们想取的Block的别名)(参数);</p></blockquote><p>在第二个控制器中声明一个Block属性</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用我们自定义的Bolck声明一个block属性</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) SendButtonTitleToFirsrBlock block;</span><br></pre></td></tr></table></figure><p>在按钮的点击事件中使用Block;</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)handleButtonEvent:(<span class="built_in">UIButton</span> *)sender &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.block) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.block(sender.currentTitle);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> dismissViewControllerAnimated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来只需要在第一个控制器中初始化第二个控制器完成的地方，使用Block。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)touchesBegan:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event &#123;</span><br><span class="line">    </span><br><span class="line">    CCSecondViewController *vc  = [[CCSecondViewController alloc] init];</span><br><span class="line">    </span><br><span class="line">    vc.block = ^(<span class="built_in">NSString</span> *string) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.label.text = string;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> presentViewController:vc animated:<span class="literal">YES</span> completion:<span class="literal">nil</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>做完这些，把工程common + R 一下，我们就可以看到和代理实现了一模一样的需求。看上去也更简单。</p><p>综上，这些就是在日常开发中常用的传值方式。当然，代理和Block能做的事多了，这里只是介绍它们传值的简单使用。如果你在阅读过程中发现有不足和错误，请留言指出。谢谢大家。如果你觉得这篇文章能给你带来一点点收获，不胜荣幸！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在日常开发过程中，我们经常会遇到值传递。这里，介绍几种iOS开发中常见的传值方式。&lt;/p&gt;
&lt;h3 id=&quot;1-属性传值&quot;&gt;&lt;a href=&quot;#1-属性传值&quot; class=&quot;headerlink&quot; title=&quot;1.属性传值&quot;&gt;&lt;/a&gt;1.属性传值&lt;/h3&gt;&lt;p&gt;属性传值是iOS中最为常见的正向传值方式，假定我们现在有这样一个需求，在A控制器点击按钮，将按钮的标题显示在B控制器的label上。首先，我们创建两个控制器CCFirstViewController和CCSecondViewController,在CCSecondViewController.h中声明一个属性&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CCSecondViewController&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;UIViewController&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@property&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;nonatomic&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;strong&lt;/span&gt;) &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *buttonTitleString;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CCSecondViewController&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;CCSecondViewController&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)viewDidLoad &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; viewDidLoad];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view.backgroundColor = [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; whiteColor];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; *label = [[&lt;span class=&quot;built_in&quot;&gt;UILabel&lt;/span&gt; alloc] initWithFrame:&lt;span class=&quot;built_in&quot;&gt;CGRectMake&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    label.center = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view.center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    label.text = &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.buttonTitleString;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.view addSubview:label];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)touchesBegan:(&lt;span class=&quot;built_in&quot;&gt;NSSet&lt;/span&gt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;UITouch&lt;/span&gt; *&amp;gt; *)touches withEvent:(&lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; dismissViewControllerAnimated:&lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt; completion:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS传值" scheme="http://localhost:4000/tags/iOS%E4%BC%A0%E5%80%BC/"/>
    
  </entry>
  
  <entry>
    <title>iOS动态修改状态栏的颜色</title>
    <link href="http://localhost:4000/2018/01/12/iOS%E5%8A%A8%E6%80%81%E4%BF%AE%E6%94%B9%E7%8A%B6%E6%80%81%E6%A0%8F%E7%9A%84%E9%A2%9C%E8%89%B2/"/>
    <id>http://localhost:4000/2018/01/12/iOS动态修改状态栏的颜色/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-15T16:38:13.821Z</updated>
    
    <content type="html"><![CDATA[<h3 id="根据偏移量，动态修改状态栏的颜色"><a href="#根据偏移量，动态修改状态栏的颜色" class="headerlink" title="根据偏移量，动态修改状态栏的颜色"></a>根据偏移量，动态修改状态栏的颜色</h3><p>码代码到现在，刚刚做了个小需求，根据偏移量动态修改状态栏的颜色。<br>刚开始我是这样想的，根据偏移量，直接修改状态栏的颜色就好了。<br>于是，便有了下面的代码。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)scrollViewDidScroll:(<span class="built_in">UIScrollView</span> *)scrollView &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (scrollView.contentOffset.y &lt;= <span class="number">-20</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.navigationController.navigationBar.barStyle = <span class="built_in">UIStatusBarStyleDefault</span>;</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">self</span>.navigationController.navigationBar.barStyle = <span class="built_in">UIStatusBarStyleLightContent</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写完一运行，貌似并没有起作用啊。谷歌上百度了一下，没有看到相关动态修改状态栏颜色的东西，有可能是手法不对。还有就是这个问题太low，没有人问过。想了一下，其实最主要的还是修改状态栏的颜色。可能因为每个项目自身的一些情况，修改状态栏颜色的方法不一定都起作用。接下来我定义了一个全局的属性记录偏移量，然后在滚动的代理方法中赋值并且调用<br><code>UIViewController</code>的<code>-(void)setNeedsStatusBarAppearanceUpdate</code>方法。然后重写系统的<code>-  (UIStatusBarStyle)preferredStatusBarStyle</code>方法。在这个方法中去改变状态栏的颜色。代码如下：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)scrollViewDidScroll:(<span class="built_in">UIScrollView</span> *)scrollView &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.offset = scrollView.contentOffset.y;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> setNeedsStatusBarAppearanceUpdate];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UIStatusBarStyle</span>)preferredStatusBarStyle &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.offset &lt;= <span class="number">-20</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">UIStatusBarStyleDefault</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">UIStatusBarStyleLightContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UIStatusBarAnimation</span>)preferredStatusBarUpdateAnimation &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">UIStatusBarAnimationFade</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>如果不是经过导航栏包装的控制器的话，到这里就可以实现根据偏移量修改状态栏的颜色了。如果你的控制器是经过导航控制器包装的，你需要自定义一个导航控制器继承自<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">``` </span><br><span class="line">- (UIViewController *)childViewControllerForStatusBarStyle</span><br></pre></td></tr></table></figure></p><p>方法</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UIViewController</span> *)childViewControllerForStatusBarStyle &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.topViewController;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>让状态栏的颜色由控制器自己去决定。</p><p>虽然都是一些简单的小东西，在日常开发中也不太会注意这些细节。遇到了就记下来，希望能帮助到需要的人。也加深自己的印象。写完收工。睡醒了再继续coding。。。最后补一张效果图就滚去睡觉了！</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-2bc540df9ca4cdef.gif?imageMogr2/auto-orient/strip" alt="效果图.gif"></p><p>如果在阅读的过程中有任何疑问或者你有更好的建议，欢迎留言指出，交流学习。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;根据偏移量，动态修改状态栏的颜色&quot;&gt;&lt;a href=&quot;#根据偏移量，动态修改状态栏的颜色&quot; class=&quot;headerlink&quot; title=&quot;根据偏移量，动态修改状态栏的颜色&quot;&gt;&lt;/a&gt;根据偏移量，动态修改状态栏的颜色&lt;/h3&gt;&lt;p&gt;码代码到现在，刚刚做了个小需求，根据偏移量动态修改状态栏的颜色。&lt;br&gt;刚开始我是这样想的，根据偏移量，直接修改状态栏的颜色就好了。&lt;br&gt;于是，便有了下面的代码。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)scrollViewDidScroll:(&lt;span class=&quot;built_in&quot;&gt;UIScrollView&lt;/span&gt; *)scrollView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (scrollView.contentOffset.y &amp;lt;= &lt;span class=&quot;number&quot;&gt;-20&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationController.navigationBar.barStyle = &lt;span class=&quot;built_in&quot;&gt;UIStatusBarStyleDefault&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.navigationController.navigationBar.barStyle = &lt;span class=&quot;built_in&quot;&gt;UIStatusBarStyleLightContent&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;写完一运行，貌似并没有起作用啊。谷歌上百度了一下，没有看到相关动态修改状态栏颜色的东西，有可能是手法不对。还有就是这个问题太low，没有人问过。想了一下，其实最主要的还是修改状态栏的颜色。可能因为每个项目自身的一些情况，修改状态栏颜色的方法不一定都起作用。接下来我定义了一个全局的属性记录偏移量，然后在滚动的代理方法中赋值并且调用&lt;br&gt;&lt;code&gt;UIViewController&lt;/code&gt;的&lt;code&gt;-(void)setNeedsStatusBarAppearanceUpdate&lt;/code&gt;方法。然后重写系统的&lt;code&gt;-  (UIStatusBarStyle)preferredStatusBarStyle&lt;/code&gt;方法。在这个方法中去改变状态栏的颜色。代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)scrollViewDidScroll:(&lt;span class=&quot;built_in&quot;&gt;UIScrollView&lt;/span&gt; *)scrollView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.offset = scrollView.contentOffset.y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; setNeedsStatusBarAppearanceUpdate];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIStatusBarStyle&lt;/span&gt;)preferredStatusBarStyle &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.offset &amp;lt;= &lt;span class=&quot;number&quot;&gt;-20&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIStatusBarStyleDefault&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIStatusBarStyleLightContent&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIStatusBarAnimation&lt;/span&gt;)preferredStatusBarUpdateAnimation &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIStatusBarAnimationFade&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://localhost:4000/tags/iOS/"/>
    
      <category term="状态栏" scheme="http://localhost:4000/tags/%E7%8A%B6%E6%80%81%E6%A0%8F/"/>
    
  </entry>
  
  <entry>
    <title>iOS打包配置</title>
    <link href="http://localhost:4000/2018/01/12/iOS%E6%89%93%E5%8C%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://localhost:4000/2018/01/12/iOS打包配置/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:54:02.029Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一-开发账号介绍"><a href="#一-开发账号介绍" class="headerlink" title="一. 开发账号介绍"></a>一. 开发账号介绍</h3><p>苹果的开发者账号主要分为三类：</p><ul><li>个人（Individual）</li><li>组织（Organizations）</li><li>教育机构（Educational Institutions）</li></ul><p>其中“组织”中又分为2个小类：</p><ul><li>公司（Company）</li><li>企业（Enterprise）</li></ul><p>我们经常最关注的是个人、公司、企业这3类：</p><ul><li>个人：个人账号只支持单人开发，即一个主体账号，可以申请升级为公司帐号。</li><li>公司：公司账号和企业账号支持协作开发，可邀请其他人加入团队，比个人多一些帐号管理的设置，可设置多个Apple ID，分4种管理级别的权限。</li><li>企业：企业账号大多用于内部分发测试。跟前面两种账号不同的是，个人和公司账号开发的应用可以上线App Store，企业账号则不能。</li></ul><a id="more"></a><h3 id="二-创建证书"><a href="#二-创建证书" class="headerlink" title="二. 创建证书"></a>二. 创建证书</h3><p>证书有开发证书，发布证书，推送证书等，这里只介绍开发证书和发布证书。</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-351dbc9a58d8bfd7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image1.png"></p><p>无论创建开发证书还是发布证书均会到如下图一步：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-a1d0b9da33f40f13.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image2.png"><br>此处需要CSR文件，创建方法如下：</p><ul><li>打开“钥匙串访问”应用<br><img src="http://upload-images.jianshu.io/upload_images/1777873-ee37089c53e08c01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image3.png"></li><li>生成CSR文件</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1777873-514fb0dec827ef2c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image4.png"></p><ul><li>生成证书后下载到电脑，双击安装，然后可在钥匙串中查看：</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1777873-dcbdc52f97a78639.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image5.png"></p><p>注意：只有拥有私钥的证书才能进行签名打包。如果想要在其他电脑上也能使用该私钥，需要拥有私钥的电脑将该证书导出为p12文件，其他电脑直接下载证书无法获得私钥。<br>提示：企业账号和公司账号支持协作开发，每一个加入的成员均可以创建一个属于自己的开发证书用于打开发包测试。</p><h3 id="三-注册App-ID"><a href="#三-注册App-ID" class="headerlink" title="三. 注册App ID"></a>三. 注册App ID</h3><p><img src="http://upload-images.jianshu.io/upload_images/1777873-08ed80812249d867.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image6.png"><br>如下图操作：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-45d74a8b06a47587.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image7.png"><br>App ID具有唯一性，如果你的App ID已经在该账号或其他账号里注册过，则会注册失败，更改你的App ID或将原来那个删除才能继续注册。</p><h3 id="四．生成描述文件"><a href="#四．生成描述文件" class="headerlink" title="四．生成描述文件"></a>四．生成描述文件</h3><p>描述文件包含一些打包签名所需要的信息，比如App ID，证书，测试设备。<br>描述文件分为开发和生产，详细见下两图：<br>下图为个人和公司账号描述文件生成页：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-8d89f3d387b0b167.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image8.png"><br>下图为企业账号描述文件生成页：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-672e43adcbad104f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image9.png"><br>创建描述文件时分四步：</p><ul><li>选择已注册的App ID</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1777873-a9683fc699d488b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image10.png"></p><ul><li>选择证书</li></ul><p>选择开发证书：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-096110ba4ee74e74.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image11.png"><br>或者选择发布证书：<br><img src="http://upload-images.jianshu.io/upload_images/1777873-bcd963b35d50e123.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image12.png"><br>注：开发者证书可以选择多个，发布证书只能选一个，选择证书时确保本地已安装该证书并拥有私钥。</p><ul><li>选择测试设备（生成发布描述文件时没有这一步）</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1777873-6f340f1241c76eb8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image13.png"></p><p>注：用该开发描述文件打的ipa包，只能在上面所选择的设备上安装，包括直接在Xcode上执行Run安装到设备上也需要设备在该列表内，若要安装在更多设备上需要添加测试设备并编辑该描述文件然后重新下载该描述文件。</p><ul><li>命名描述文件完成创建</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/1777873-882c9156177bbb16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image14.png"></p><p>创建完成后直接下载双击即可。</p><h3 id="五-Xcode打包配置"><a href="#五-Xcode打包配置" class="headerlink" title="五.  Xcode打包配置"></a>五.  Xcode打包配置</h3><p>在Targets-&gt;General中做如下配置：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-2df6721ccc8d5fcf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image15.png"></p><p>然后进行Archive打包，完成后进行导出出现下图提示：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-0d40a171838fffde.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image16.png"><br>选择所需要的包类型后即可生成ipa包</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-1ddb7d7b6b5c11b1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image17.png"></p><h3 id="六．证书过期或被删除"><a href="#六．证书过期或被删除" class="headerlink" title="六．证书过期或被删除"></a>六．证书过期或被删除</h3><ul><li>对于个人或公司账号，已经成功过审并上架的应用，即使为该应用打包时使用的发布证书过期或被删除，也不会对已上架的应用造成任何影响，只会对打新的包造成影响，需要重新生成证书和描述文件。</li><li>对于企业账号，若打包时所用的发布证书过期或被删除，会导致已经安装的应用闪退无法启动，需要重新生成证书和描述文件重新打包。</li><li>无论个人、公司、企业账号，若打开发测试包所用的开发证书过期或被删除，会导致应用无法启动。</li></ul><h3 id="附：Ad-Hoc发布"><a href="#附：Ad-Hoc发布" class="headerlink" title="附：Ad Hoc发布"></a>附：Ad Hoc发布</h3><p>在选择打包类型时有一个选项不常用：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-8fa38cf0d00c25ac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image18.png"></p><p>该选项打的ipa的包为Ad Hoc发布包，通过Ad Hoc来实现发布前的用户测试。从另一个角度讲也就是通过Ad Hoc 将未发布的App 给其他人提前免费使用，通过这种方式发布的包不用上架App Store便能使用，但仅限已添加至该开发账号的设备上安装。<br>打Ad Hoc发布包需要另外配置描述文件，需要选择可安装的设备：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-206711ea9f63da45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image19.png"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一-开发账号介绍&quot;&gt;&lt;a href=&quot;#一-开发账号介绍&quot; class=&quot;headerlink&quot; title=&quot;一. 开发账号介绍&quot;&gt;&lt;/a&gt;一. 开发账号介绍&lt;/h3&gt;&lt;p&gt;苹果的开发者账号主要分为三类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;个人（Individual）&lt;/li&gt;
&lt;li&gt;组织（Organizations）&lt;/li&gt;
&lt;li&gt;教育机构（Educational Institutions）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中“组织”中又分为2个小类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公司（Company）&lt;/li&gt;
&lt;li&gt;企业（Enterprise）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们经常最关注的是个人、公司、企业这3类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;个人：个人账号只支持单人开发，即一个主体账号，可以申请升级为公司帐号。&lt;/li&gt;
&lt;li&gt;公司：公司账号和企业账号支持协作开发，可邀请其他人加入团队，比个人多一些帐号管理的设置，可设置多个Apple ID，分4种管理级别的权限。&lt;/li&gt;
&lt;li&gt;企业：企业账号大多用于内部分发测试。跟前面两种账号不同的是，个人和公司账号开发的应用可以上线App Store，企业账号则不能。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="打包" scheme="http://localhost:4000/tags/%E6%89%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>IQKeyboardManager导航栏上移</title>
    <link href="http://localhost:4000/2018/01/12/IQKeyboardManager%E5%AF%BC%E8%88%AA%E6%A0%8F%E4%B8%8A%E7%A7%BB/"/>
    <id>http://localhost:4000/2018/01/12/IQKeyboardManager导航栏上移/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-12T13:50:18.917Z</updated>
    
    <content type="html"><![CDATA[<p>使用IQKeyboardManager来处理项目中的文本框被遮挡的问题是一个很好的选择, 但是也因为这个三方框架自动做了太多的事情有时候会导致一些很奇怪的问题。最常见的就是当控制器带有导航栏的时候会导致导航栏上移。官方Demo中也有提供一些解决方法。最近在实现一个表单提交页的时候，在UITableViewCell中有UITextField，在使用IQKeyboardManager的过程中也发现导航栏有上移的情况。但是我看Demo中并不会出现这样的情况。后来发现，在布局UITableView的时候，是直接设置的frame为self.view.bounds，看起来并没有什么大问题，但是这样IQKeyboardManager在处理的时候会让整个View的frame都上移，导航栏也就跟着偏移了。正确的做法是让UITableView的frame从导航栏下面开始布局。像这样</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)viewDidLayoutSubviews</span><br><span class="line">&#123;</span><br><span class="line">    [<span class="keyword">super</span> viewDidLayoutSubviews];</span><br><span class="line">    [<span class="keyword">self</span>.tableView mas_makeConstraints:^(MASConstraintMaker *make) &#123;</span><br><span class="line">        make.top.mas_equalTo(kTopHeight);</span><br><span class="line">        make.bottom.left.right.mas_equalTo(<span class="number">0</span>);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，导航栏就不会被顶出屏幕了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用IQKeyboardManager来处理项目中的文本框被遮挡的问题是一个很好的选择, 但是也因为这个三方框架自动做了太多的事情有时候会导致一些很奇怪的问题。最常见的就是当控制器带有导航栏的时候会导致导航栏上移。官方Demo中也有提供一些解决方法。最近在实现一个表单提交页
      
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="IQKeyboardManager" scheme="http://localhost:4000/tags/IQKeyboardManager/"/>
    
      <category term="bug" scheme="http://localhost:4000/tags/bug/"/>
    
  </entry>
  
  <entry>
    <title>一个星形评分控件的封装</title>
    <link href="http://localhost:4000/2018/01/12/%E4%B8%80%E4%B8%AA%E6%98%9F%E5%BD%A2%E8%AF%84%E5%88%86%E6%8E%A7%E4%BB%B6%E7%9A%84%E5%B0%81%E8%A3%85/"/>
    <id>http://localhost:4000/2018/01/12/一个星形评分控件的封装/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:53:41.988Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>很久没有更新简书了，这段时间一直在忙着撸代码。项目的事情暂时总算是告一段落了，打开简书一看，整个六月份一篇都没有写。本来还想强行解释一波的，算了，总结一句话，还是懒。新项目设计妹纸正在做设计稿，看到项目中有一个星形评分的控件，闲来无事，找了几个网上的看了一下，都不是很满足自己的需求，所以自己动手实现了一下。</p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="http://upload-images.jianshu.io/upload_images/1777873-d5bde20cc0f48c48.gif?imageMogr2/auto-orient/strip" alt="效果图.gif"></p><a id="more"></a><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><ul><li>创建前后两个frame相等的视图</li><li>在创建好的视图上循环添加需要个数的UIImageView，并设置对应的图片。</li><li>根据手指在控件上的位置获取X轴上的偏移量，计算成分数。</li></ul><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p>大致的实现思路了解了，接下来要做的就是编码实现。首先创建一个类 <code>XKStarRateView</code> 继承自 <code>UIView</code>，在 <code>XKStarRateView.h</code> 中，声明一些初始的构造方法。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">NS_ENUM</span>(<span class="built_in">NSInteger</span>, XKStarRateStyle) &#123;</span><br><span class="line">    </span><br><span class="line">    XKWholeStarStyle = <span class="number">0</span>,</span><br><span class="line">    </span><br><span class="line">    XKHalfStarStyle = <span class="number">1</span>,</span><br><span class="line">    </span><br><span class="line">    XKIncompleteStarStyle = <span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span>(^XKStarRateSelectedBlock)(<span class="built_in">CGFloat</span> score);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@class</span> <span class="title">XKStarRateView</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@protocol</span> <span class="title">XKStarRateViewDelegate</span> &lt;<span class="title">NSObject</span>&gt;</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)starRateView:(XKStarRateView *)starRateView currentScore:(<span class="built_in">CGFloat</span>)currentScore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">XKStarRateView</span> : <span class="title">UIView</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/// 是否显示动画(默认为NO)</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">BOOL</span> isAnimation;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 评分样式 (XKWholeStarStyle 整星评论 XKHalfStarStyle 半星评论 XKIncompleteStarStyle 不完整星评论)</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) XKStarRateStyle rateStyle;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 代理</span></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">weak</span>) <span class="keyword">id</span>&lt;XKStarRateViewDelegate&gt; delegate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 初始化方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param frame 控件frame</span></span><br><span class="line"><span class="comment"> @param numberOfStars 星星数量</span></span><br><span class="line"><span class="comment"> @param rateStyle 评分样式 (XKWholeStarStyle 整星评论 XKHalfStarStyle 半星评论 XKIncompleteStarStyle 不完整星评论)</span></span><br><span class="line"><span class="comment"> @param isAnimation 是否动画</span></span><br><span class="line"><span class="comment"> @param delegate 代理</span></span><br><span class="line"><span class="comment"> @return XKStarRateView</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame</span><br><span class="line">                numberOfStars:(<span class="built_in">NSInteger</span>)numberOfStars</span><br><span class="line">                    rateStyle:(XKStarRateStyle)rateStyle</span><br><span class="line">                  isAnination:(<span class="built_in">BOOL</span>)isAnimation</span><br><span class="line">                     delegate:(<span class="keyword">id</span>&lt;XKStarRateViewDelegate&gt;)delegate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 初始化方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param frame 控件frame</span></span><br><span class="line"><span class="comment"> @param starRateSelectedBlock 点击星星的回调</span></span><br><span class="line"><span class="comment"> @return XKStarRateView</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame</span><br><span class="line">        starRateSelectedBlock:(XKStarRateSelectedBlock)starRateSelectedBlock;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 初始化方法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param frame 控件frame</span></span><br><span class="line"><span class="comment"> @param numberOfStars 星星数量</span></span><br><span class="line"><span class="comment"> @param rateStyle 评分样式 (XKWholeStarStyle 整星评论 XKHalfStarStyle 半星评论 XKIncompleteStarStyle 不完整星评论)</span></span><br><span class="line"><span class="comment"> @param isAnimation 是否动画</span></span><br><span class="line"><span class="comment"> @param starRateSelectedBlock 点击星星的回调</span></span><br><span class="line"><span class="comment"> @return XKStarRateView</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame</span><br><span class="line">                numberOfStars:(<span class="built_in">NSInteger</span>)numberOfStars</span><br><span class="line">                    rateStyle:(XKStarRateStyle)rateStyle</span><br><span class="line">                  isAnination:(<span class="built_in">BOOL</span>)isAnimation</span><br><span class="line">        starRateSelectedBlock:(XKStarRateSelectedBlock)starRateSelectedBlock;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>这里提供了三种样式供选择，整星，半星，任意星。以及代理和Block两种方式获得当前控件显示所对应的分数。还提供了一个可选动画的属性。</p><p>在实现的过程中，首先定义一些必要的属性参数。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span>(^completeBlock)(<span class="built_in">CGFloat</span> currentScore);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">XKStarRateView</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *foregroundStarView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *backgroundStarView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">NSInteger</span> numberOfStars;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> currentScore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) completeBlock complete;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>接下来声明一个方法创建需要的视图</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 根据图片名称创建StarView</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param imageName 图片名称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">UIView</span> *)createStarViewWithImageName:(<span class="built_in">NSString</span> *)imageName &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIView</span> *view = [[<span class="built_in">UIView</span> alloc] initWithFrame:<span class="keyword">self</span>.bounds];</span><br><span class="line">    </span><br><span class="line">    view.clipsToBounds = <span class="literal">YES</span>;</span><br><span class="line">    </span><br><span class="line">    view.backgroundColor = [<span class="built_in">UIColor</span> clearColor];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSInteger</span> i = <span class="number">0</span>; i &lt; <span class="keyword">self</span>.numberOfStars; i ++) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">UIImageView</span> *imageView = [[<span class="built_in">UIImageView</span> alloc] initWithImage:[<span class="built_in">UIImage</span> imageNamed:imageName]];</span><br><span class="line">        </span><br><span class="line">        imageView.frame = <span class="built_in">CGRectMake</span>(i * <span class="keyword">self</span>.bounds.size.width / <span class="keyword">self</span>.numberOfStars, <span class="number">0</span>, <span class="keyword">self</span>.bounds.size.width / <span class="keyword">self</span>.numberOfStars, <span class="keyword">self</span>.bounds.size.height);</span><br><span class="line">        </span><br><span class="line">        imageView.contentMode = <span class="built_in">UIViewContentModeScaleAspectFit</span>;</span><br><span class="line">        </span><br><span class="line">        [view addSubview:imageView];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> view;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>初始化视图</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 初始化评论视图</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)initStarView &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.foregroundStarView = [<span class="keyword">self</span> createStarViewWithImageName:NormalImageName];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.backgroundStarView = [<span class="keyword">self</span> createStarViewWithImageName:SelectedImageName];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.foregroundStarView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">self</span>.bounds.size.width * _currentScore / <span class="keyword">self</span>.numberOfStars, <span class="keyword">self</span>.bounds.size.height);</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> addSubview:<span class="keyword">self</span>.backgroundStarView];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> addSubview:<span class="keyword">self</span>.foregroundStarView];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>视图什么的都创建好了，接着处理事件，这里的点击事件和滑动事件我并没有去给视图添加手势，而是直接放到视图的Touch事件中去处理的。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#pragma mark -- touch事件处理</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)touchesBegan:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event &#123;</span><br><span class="line">    </span><br><span class="line">    [event touchesForView:<span class="keyword">self</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSSet</span> *allTouches = [event allTouches];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UITouch</span> *touch = [allTouches anyObject];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGPoint</span> point = [touch locationInView:[touch view]];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> offset = point.x;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> realStarScore = offset / (<span class="keyword">self</span>.bounds.size.width / <span class="keyword">self</span>.numberOfStars);</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> handleRealStarScore:realStarScore];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)touchesMoved:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event &#123;</span><br><span class="line">    </span><br><span class="line">    [event touchesForView:<span class="keyword">self</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSSet</span> *allTouches = [event allTouches];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UITouch</span> *touch = [allTouches anyObject];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGPoint</span> point = [touch locationInView:[touch view]];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> offset = point.x;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> realStarScore = offset / (<span class="keyword">self</span>.bounds.size.width / <span class="keyword">self</span>.numberOfStars);</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> handleRealStarScore:realStarScore];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据偏移量计算最终的评分，这里根据选择不同的样式计算方法有不一样的地方。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 根据偏移量计算最终的评分</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param realStarScore 真实的偏移量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)handleRealStarScore:(<span class="built_in">CGFloat</span>)realStarScore &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (_rateStyle) &#123;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> XKWholeStarStyle:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span>.currentScore = ceilf(realStarScore);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> XKHalfStarStyle:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span>.currentScore = roundf(realStarScore) &gt; realStarScore ? ceilf(realStarScore) : (ceilf(realStarScore) - <span class="number">0.5</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> XKIncompleteStarStyle:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span>.currentScore = realStarScore;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里主要的就是两个C语言函数的使用。</p><ul><li><code>round</code>：如果参数是小数，则求本身的四舍五入。</li><li><code>ceilf</code>：如果参数是小数，则向上取整。</li></ul><p>拿到当前的偏移量计算出来的分数之后，在setter方法中将这个值传出去。并且刷新视图。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)setCurrentScore:(<span class="built_in">CGFloat</span>)currentScore &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (_currentScore == currentScore) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (currentScore &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        _currentScore = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (currentScore &gt; _numberOfStars) &#123;</span><br><span class="line">        </span><br><span class="line">        _currentScore = _numberOfStars;</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        </span><br><span class="line">        _currentScore = currentScore;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(starRateView:currentScore:)]) &#123;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span>.delegate starRateView:<span class="keyword">self</span> currentScore:_currentScore];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.complete) &#123;</span><br><span class="line">        </span><br><span class="line">        _complete(_currentScore);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> setNeedsLayout];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 <code>- (void)layoutSubviews</code> 方法中，去改变 <code>foregroundStarView</code> 的frame即可。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)layoutSubviews &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> layoutSubviews];</span><br><span class="line">    </span><br><span class="line">    __<span class="keyword">weak</span> XKStarRateView *weakSelf = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> animationTimeInterval = <span class="keyword">self</span>.isAnimation ? <span class="number">0.2</span> : <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    [<span class="built_in">UIView</span> animateWithDuration:animationTimeInterval animations:^&#123;</span><br><span class="line">        </span><br><span class="line">        weakSelf.foregroundStarView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, weakSelf.bounds.size.width * weakSelf.currentScore / <span class="keyword">self</span>.numberOfStars, weakSelf.bounds.size.height);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，基本的功能就做完了，构造方法中只需要初始化部分参数就好了。运行程序，发现有一个问题，就是当你选择了一个分数之后，在 <code>XKWholeStarStyle</code> 和 <code>XKHalfStarStyle</code> 两种样式中，始终没有办法将评分设置为0，问题出在 <code>- (void)handleRealStarScore:(CGFloat)realStarScore</code> 这个方法中使用到的两个C语言函数。这里最后也没有去在想其他的方式来实现。在这个方法中手动的设置了一下，当 <code>realStarScore</code>比0.5还小的时候，就直接让分数为0。简单粗暴。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 根据偏移量计算最终的评分</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param realStarScore 真实的偏移量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)handleRealStarScore:(<span class="built_in">CGFloat</span>)realStarScore &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (_rateStyle) &#123;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> XKWholeStarStyle:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (realStarScore &lt; <span class="number">0.5</span>) &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">self</span>.currentScore = <span class="number">0</span>;</span><br><span class="line">                </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">self</span>.currentScore = ceilf(realStarScore);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> XKHalfStarStyle:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (realStarScore &lt; <span class="number">0.4</span>) &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">self</span>.currentScore = <span class="number">0</span>;</span><br><span class="line">                </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">self</span>.currentScore = roundf(realStarScore) &gt; realStarScore ? ceilf(realStarScore) : (ceilf(realStarScore) - <span class="number">0.5</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> XKIncompleteStarStyle:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span>.currentScore = realStarScore;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，整个实现文件的代码如下</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"XKStarRateView.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#define NormalImageName @<span class="meta-string">"b27_icon_star_yellow"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#define SelectedImageName @<span class="meta-string">"b27_icon_star_gray"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">void</span>(^completeBlock)(<span class="built_in">CGFloat</span> currentScore);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">XKStarRateView</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *foregroundStarView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UIView</span> *backgroundStarView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">NSInteger</span> numberOfStars;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">assign</span>) <span class="built_in">CGFloat</span> currentScore;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) completeBlock complete;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">XKStarRateView</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark -- 构造方法</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> initWithFrame:frame]) &#123;</span><br><span class="line">        </span><br><span class="line">        _numberOfStars = <span class="number">5</span>;</span><br><span class="line">        </span><br><span class="line">        _rateStyle = XKWholeStarStyle;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> initStarView];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame</span><br><span class="line">                numberOfStars:(<span class="built_in">NSInteger</span>)numberOfStars</span><br><span class="line">                    rateStyle:(XKStarRateStyle)rateStyle</span><br><span class="line">                  isAnination:(<span class="built_in">BOOL</span>)isAnimation</span><br><span class="line">                     delegate:(<span class="keyword">id</span>&lt;XKStarRateViewDelegate&gt;)delegate &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> initWithFrame:frame]) &#123;</span><br><span class="line">        </span><br><span class="line">        _numberOfStars = numberOfStars;</span><br><span class="line">        </span><br><span class="line">        _rateStyle = rateStyle;</span><br><span class="line">        </span><br><span class="line">        _isAnimation = isAnimation;</span><br><span class="line">        </span><br><span class="line">        _delegate = delegate;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> initStarView];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame</span><br><span class="line">        starRateSelectedBlock:(XKStarRateSelectedBlock)starRateSelectedBlock&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> initWithFrame:frame]) &#123;</span><br><span class="line">        </span><br><span class="line">        _numberOfStars = <span class="number">5</span>;</span><br><span class="line">        </span><br><span class="line">        _rateStyle = XKWholeStarStyle;</span><br><span class="line">        </span><br><span class="line">        _complete = ^(<span class="built_in">CGFloat</span> currentScore)&#123;</span><br><span class="line">            </span><br><span class="line">            starRateSelectedBlock(currentScore);</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> initStarView];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame</span><br><span class="line">                numberOfStars:(<span class="built_in">NSInteger</span>)numberOfStars</span><br><span class="line">                    rateStyle:(XKStarRateStyle)rateStyle</span><br><span class="line">                  isAnination:(<span class="built_in">BOOL</span>)isAnimation</span><br><span class="line">        starRateSelectedBlock:(XKStarRateSelectedBlock)starRateSelectedBlock &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> initWithFrame:frame]) &#123;</span><br><span class="line">        </span><br><span class="line">        _numberOfStars = numberOfStars;</span><br><span class="line">        </span><br><span class="line">        _rateStyle = rateStyle;</span><br><span class="line">        </span><br><span class="line">        _isAnimation = isAnimation;</span><br><span class="line">        </span><br><span class="line">        _complete = ^(<span class="built_in">CGFloat</span> currentScore) &#123;</span><br><span class="line">            </span><br><span class="line">            starRateSelectedBlock(currentScore);</span><br><span class="line">        &#125;;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span> initStarView];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark -- 私有方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 初始化评论视图</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)initStarView &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.foregroundStarView = [<span class="keyword">self</span> createStarViewWithImageName:NormalImageName];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.backgroundStarView = [<span class="keyword">self</span> createStarViewWithImageName:SelectedImageName];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.foregroundStarView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">self</span>.bounds.size.width * _currentScore / <span class="keyword">self</span>.numberOfStars, <span class="keyword">self</span>.bounds.size.height);</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> addSubview:<span class="keyword">self</span>.backgroundStarView];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> addSubview:<span class="keyword">self</span>.foregroundStarView];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 根据图片名称创建StarView</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param imageName 图片名称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="built_in">UIView</span> *)createStarViewWithImageName:(<span class="built_in">NSString</span> *)imageName &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UIView</span> *view = [[<span class="built_in">UIView</span> alloc] initWithFrame:<span class="keyword">self</span>.bounds];</span><br><span class="line">    </span><br><span class="line">    view.clipsToBounds = <span class="literal">YES</span>;</span><br><span class="line">    </span><br><span class="line">    view.backgroundColor = [<span class="built_in">UIColor</span> clearColor];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">NSInteger</span> i = <span class="number">0</span>; i &lt; <span class="keyword">self</span>.numberOfStars; i ++) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">UIImageView</span> *imageView = [[<span class="built_in">UIImageView</span> alloc] initWithImage:[<span class="built_in">UIImage</span> imageNamed:imageName]];</span><br><span class="line">        </span><br><span class="line">        imageView.frame = <span class="built_in">CGRectMake</span>(i * <span class="keyword">self</span>.bounds.size.width / <span class="keyword">self</span>.numberOfStars, <span class="number">0</span>, <span class="keyword">self</span>.bounds.size.width / <span class="keyword">self</span>.numberOfStars, <span class="keyword">self</span>.bounds.size.height);</span><br><span class="line">        </span><br><span class="line">        imageView.contentMode = <span class="built_in">UIViewContentModeScaleAspectFit</span>;</span><br><span class="line">        </span><br><span class="line">        [view addSubview:imageView];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> view;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 根据偏移量计算最终的评分</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param realStarScore 真实的偏移量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)handleRealStarScore:(<span class="built_in">CGFloat</span>)realStarScore &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">switch</span> (_rateStyle) &#123;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> XKWholeStarStyle:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (realStarScore &lt; <span class="number">0.5</span>) &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">self</span>.currentScore = <span class="number">0</span>;</span><br><span class="line">                </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">self</span>.currentScore = ceilf(realStarScore);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> XKHalfStarStyle:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (realStarScore &lt; <span class="number">0.4</span>) &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">self</span>.currentScore = <span class="number">0</span>;</span><br><span class="line">                </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">self</span>.currentScore = roundf(realStarScore) &gt; realStarScore ? ceilf(realStarScore) : (ceilf(realStarScore) - <span class="number">0.5</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">case</span> XKIncompleteStarStyle:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">self</span>.currentScore = realStarScore;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark -- touch事件处理</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)touchesBegan:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event &#123;</span><br><span class="line">    </span><br><span class="line">    [event touchesForView:<span class="keyword">self</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSSet</span> *allTouches = [event allTouches];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UITouch</span> *touch = [allTouches anyObject];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGPoint</span> point = [touch locationInView:[touch view]];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> offset = point.x;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> realStarScore = offset / (<span class="keyword">self</span>.bounds.size.width / <span class="keyword">self</span>.numberOfStars);</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> handleRealStarScore:realStarScore];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)touchesMoved:(<span class="built_in">NSSet</span>&lt;<span class="built_in">UITouch</span> *&gt; *)touches withEvent:(<span class="built_in">UIEvent</span> *)event &#123;</span><br><span class="line">    </span><br><span class="line">    [event touchesForView:<span class="keyword">self</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSSet</span> *allTouches = [event allTouches];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">UITouch</span> *touch = [allTouches anyObject];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGPoint</span> point = [touch locationInView:[touch view]];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> offset = point.x;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> realStarScore = offset / (<span class="keyword">self</span>.bounds.size.width / <span class="keyword">self</span>.numberOfStars);</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> handleRealStarScore:realStarScore];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)layoutSubviews &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> layoutSubviews];</span><br><span class="line">    </span><br><span class="line">    __<span class="keyword">weak</span> XKStarRateView *weakSelf = <span class="keyword">self</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">CGFloat</span> animationTimeInterval = <span class="keyword">self</span>.isAnimation ? <span class="number">0.2</span> : <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    [<span class="built_in">UIView</span> animateWithDuration:animationTimeInterval animations:^&#123;</span><br><span class="line">        </span><br><span class="line">        weakSelf.foregroundStarView.frame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, weakSelf.bounds.size.width * weakSelf.currentScore/<span class="keyword">self</span>.numberOfStars, weakSelf.bounds.size.height);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#pragma mark -- setter方法</span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setCurrentScore:(<span class="built_in">CGFloat</span>)currentScore &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (_currentScore == currentScore) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (currentScore &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        _currentScore = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (currentScore &gt; _numberOfStars) &#123;</span><br><span class="line">        </span><br><span class="line">        _currentScore = _numberOfStars;</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        </span><br><span class="line">        _currentScore = currentScore;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.delegate &amp;&amp; [<span class="keyword">self</span>.delegate respondsToSelector:<span class="keyword">@selector</span>(starRateView:currentScore:)]) &#123;</span><br><span class="line">        </span><br><span class="line">        [<span class="keyword">self</span>.delegate starRateView:<span class="keyword">self</span> currentScore:_currentScore];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>.complete) &#123;</span><br><span class="line">        </span><br><span class="line">        _complete(_currentScore);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> setNeedsLayout];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>全部的代码都在这里了。同样的，需要的朋友可以<a href="https://github.com/jhchenchong/XKStarRateView.git" target="_blank" rel="noopener">点击这里</a>下载Demo工程。如果在使用过程中发现问题欢迎留言提出。谢谢！</p><h3 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h3><p><a href="https://github.com/huahua0809/XHStarRateView" target="_blank" rel="noopener">在代码封装的过程中有参考这里的代码</a> 在此感谢。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;很久没有更新简书了，这段时间一直在忙着撸代码。项目的事情暂时总算是告一段落了，打开简书一看，整个六月份一篇都没有写。本来还想强行解释一波的，算了，总结一句话，还是懒。新项目设计妹纸正在做设计稿，看到项目中有一个星形评分的控件，闲来无事，找了几个网上的看了一下，都不是很满足自己的需求，所以自己动手实现了一下。&lt;/p&gt;
&lt;h3 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1777873-d5bde20cc0f48c48.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;效果图.gif&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="自定义视图" scheme="http://localhost:4000/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%86%E5%9B%BE/"/>
    
      <category term="评分控件" scheme="http://localhost:4000/tags/%E8%AF%84%E5%88%86%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>从零开始 一步步将自己的框架导入CocoaPods</title>
    <link href="http://localhost:4000/2018/01/12/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B--%E4%B8%80%E6%AD%A5%E6%AD%A5%E5%B0%86%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A1%86%E6%9E%B6%E5%AF%BC%E5%85%A5CocoaPods/"/>
    <id>http://localhost:4000/2018/01/12/从零开始--一步步将自己的框架导入CocoaPods/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:49:39.277Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>对于做iOS开发的来说，不知道CocoaPods无异于耍流氓。日常开发中我们经常会使用它来管理我们的三方库。用别人的框架用得太多了，慢慢的，撸的代码越来越多，会发现自己在不知不觉间收集了很多好用的扩展，或者那天自己写出一个比较优秀的效果，会想着将这些东西分享出来。当然，我们可以将代码直接丢到GitHub之类的代码托管平台，供大家参考。某年某月某一天，你心血来潮的也想撸个框架。什么？你写了一个框架，竟然不支持CocoaPods？程序员大多数都是懒的，能用一行代码解决的事情绝不写两行，更何况CocoaPods这么好用的东西，好的框架不支持怎么行啊？这里把自己写的小东西是如何一步一步支持CocoaPods的作一个介绍。希望有需要的小伙伴能从这里看到你想要的东西。</p><a id="more"></a><h3 id="1-创建一个开源项目"><a href="#1-创建一个开源项目" class="headerlink" title="1.创建一个开源项目"></a>1.创建一个开源项目</h3><p>在GitHub上创建一个开源项目，将自己想要开源的东西先托管到GitHub上。这个步骤不是本篇文章的关键，这里不多作赘述。如果不熟悉的小伙伴请自行谷歌上百度一下，或者就近在简书你搜索一下说不定也有奇效。</p><h3 id="2-给项目打上Tag"><a href="#2-给项目打上Tag" class="headerlink" title="2.给项目打上Tag"></a>2.给项目打上Tag</h3><p>在项目的GitHub主页中，点击release直接创建一个Tag就好了。这里的Tag在后面会用到。</p><h3 id="3-在工程中的根目录下创建一个podspec文件"><a href="#3-在工程中的根目录下创建一个podspec文件" class="headerlink" title="3.在工程中的根目录下创建一个podspec文件"></a>3.在工程中的根目录下创建一个podspec文件</h3><p>具体的做法是cd到工程根目录，执行下面的命令。</p><blockquote><p>pod spec create 你想要的名字</p></blockquote><p>执行命令会在该目录下生成一个 你想要的名字.podspec文件。</p><h3 id="4-编辑podspec文件"><a href="#4-编辑podspec文件" class="headerlink" title="4.编辑podspec文件"></a>4.编辑podspec文件</h3><p>还是在刚刚的目录下，执行下面命令。</p><blockquote><p>vim 你想要的名字.podspec</p></blockquote><p>进入之后你会发现这个文件中有非常详细的文档说明。按照文档的说明将我们的项目的信息填写上就好了。当然，我们也可以直接在GitHub上随便找一个开源项目。然后把它的podspec文件打开。然后对着修改自己的podspec文件就好了。这里贴出我的一个podspec文件供大家参考。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Pod::Spec.new do |s|</span><br><span class="line">s.name = &apos;AnimatedLayout&apos;</span><br><span class="line">s.version = &apos;1.0.0&apos;</span><br><span class="line">s.license = &apos;MIT&apos;</span><br><span class="line">s.summary = &apos;An animatedLayout of UICollectionView&apos;</span><br><span class="line">s.homepage = &apos;https://github.com/jhchenchong/AnimatedLayout&apos;</span><br><span class="line">s.authors = &#123; &apos;浪漫恋星空&apos; =&gt; &apos;727378500@qq.com&apos; &#125;</span><br><span class="line">s.source = &#123; :git =&gt; &apos;https://github.com/jhchenchong/AnimatedLayout.git&apos;, :tag =&gt; s.version.to_s &#125;</span><br><span class="line">s.requires_arc = true</span><br><span class="line">s.ios.deployment_target = &apos;8.0&apos;</span><br><span class="line">s.source_files = &apos;AnimatedLayout/AnimatedLayout/AnimatedLayout/*.&#123;h,m&#125;&apos;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>s.version就是之前说的要用到的Tag（这里一定要保持一致）。</p><p>s.source_files这个文件目录结构，跟自己的目录结构是有关的。<br><img src="http://upload-images.jianshu.io/upload_images/1777873-b6499df031f92cec.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="目录"><br>这是我的目录，可以根据实际情况修改自己的s.source_files。</p><p>还有其他的一些命令，比如说你的框架中所依赖的核心库，可以使用下面的命令。</p><blockquote><p>s.framework  = “Framework1”，”Framework2”</p></blockquote><p>如果你的项目中还依赖了三方的库，可以像这样使用：</p><blockquote><p>s.dependency “AFNetworking”, “~&gt; 3.1”</p></blockquote><p>如果要依赖很多的三方库，就按照上面的写法，多写几个s.dependency就好了。</p><p>编辑完podspec文件之后，需要验证该文件。</p><blockquote><p>pod spec lint xxx.podspec</p></blockquote><p>xxx passed validation 说明验证通过了。如果出现警告或者错误，对照着提示开始改，一直改到没有错误为止。最开始填写的时候总是会有一些小问题，不要着急，一点一点慢慢的修改就好了。</p><h3 id="5-注册Trunk"><a href="#5-注册Trunk" class="headerlink" title="5.注册Trunk"></a>5.注册Trunk</h3><p>这里需要CocoaPods的版本在0.33以上，现在应该都是在这个版本之上了吧。执行 pod –version 命令查看CocoaPods版本信息。如果不满足的话，请先更新到正确的版本。</p><blockquote><p>pod trunk register  ‘邮箱’ –description=’描述’</p></blockquote><p>注册成功的话，邮箱会收到验证邮件。点进去激活就好了。</p><blockquote><p>pod trunk me</p></blockquote><p>执行该命令，可以查看自己的信息。</p><h3 id="6-pod-trunk-push"><a href="#6-pod-trunk-push" class="headerlink" title="6.pod trunk push"></a>6.pod trunk push</h3><p>执行命令</p><blockquote><p>pod trunk push xxx.podspec</p></blockquote><p>前面的podspec文件如果验证都合法的话，恭喜你，你应该已经将自己的框架增加了CocoaPods支持。</p><p>最后，如果你在执行pod search 命令的时候发现找不到自己的框架。可以尝试下面的方法。</p><ul><li>执行 pod setup 命令</li><li>等待 pod setup 成功</li><li>执行 rm ~/Library/Caches/CocoaPods/search_index.json<br>做完这些之后，在 pod search 一下试试。</li></ul><p>参考文献</p><ul><li><a href="http://www.cnblogs.com/wntd/p/5895253.html" target="_blank" rel="noopener">http://www.cnblogs.com/wntd/p/5895253.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;p&gt;对于做iOS开发的来说，不知道CocoaPods无异于耍流氓。日常开发中我们经常会使用它来管理我们的三方库。用别人的框架用得太多了，慢慢的，撸的代码越来越多，会发现自己在不知不觉间收集了很多好用的扩展，或者那天自己写出一个比较优秀的效果，会想着将这些东西分享出来。当然，我们可以将代码直接丢到GitHub之类的代码托管平台，供大家参考。某年某月某一天，你心血来潮的也想撸个框架。什么？你写了一个框架，竟然不支持CocoaPods？程序员大多数都是懒的，能用一行代码解决的事情绝不写两行，更何况CocoaPods这么好用的东西，好的框架不支持怎么行啊？这里把自己写的小东西是如何一步一步支持CocoaPods的作一个介绍。希望有需要的小伙伴能从这里看到你想要的东西。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://localhost:4000/tags/iOS/"/>
    
      <category term="CocoaPods" scheme="http://localhost:4000/tags/CocoaPods/"/>
    
  </entry>
  
  <entry>
    <title>基本排序算法的OC实现</title>
    <link href="http://localhost:4000/2018/01/12/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95,%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95,%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84OC%E5%AE%9E%E7%8E%B0/"/>
    <id>http://localhost:4000/2018/01/12/冒泡排序算法,选择排序算法,快速排序算法的OC实现/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:53:06.549Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-冒泡排序算法"><a href="#1-冒泡排序算法" class="headerlink" title="1.冒泡排序算法"></a>1.冒泡排序算法</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 冒泡排序算法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param mutableArray 需要排序的数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)bubbleSortArray:(<span class="built_in">NSMutableArray</span> *)mutableArray &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mutableArray.count; i ++) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; mutableArray.count - <span class="number">1</span>; j ++) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (mutableArray[j] &gt; mutableArray[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                </span><br><span class="line">                [mutableArray exchangeObjectAtIndex:j withObjectAtIndex:j + <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="2-选择排序算法"><a href="#2-选择排序算法" class="headerlink" title="2.选择排序算法"></a>2.选择排序算法</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 选择排序算法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param mutableArray 需要排序的数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)selectionSortArray:(<span class="built_in">NSMutableArray</span> *)mutableArray &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mutableArray.count; i ++) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; mutableArray.count; j ++) &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (mutableArray[i] &gt; mutableArray[j]) &#123;</span><br><span class="line">                </span><br><span class="line">                [mutableArray exchangeObjectAtIndex:i withObjectAtIndex:j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-快速排序算法"><a href="#3-快速排序算法" class="headerlink" title="3.快速排序算法"></a>3.快速排序算法</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 快速排序算法</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param array 需要排序的数组</span></span><br><span class="line"><span class="comment"> @param leftIndex 左边的下标</span></span><br><span class="line"><span class="comment"> @param rightIndex 右边的下标</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">- (<span class="keyword">void</span>)quickSortArray:(<span class="built_in">NSMutableArray</span> *)array</span><br><span class="line">             leftIndex:(<span class="built_in">NSInteger</span>)leftIndex</span><br><span class="line">            rightIndex:(<span class="built_in">NSInteger</span>)rightIndex &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (leftIndex &gt;= rightIndex) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSInteger</span> i = leftIndex;</span><br><span class="line">    <span class="built_in">NSInteger</span> j = rightIndex;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 记录基准数</span></span><br><span class="line">    <span class="built_in">NSInteger</span> key = [array[i] integerValue];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 首先从右边j开始查找比基准数小的值</span></span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; [array[j] integerValue] &gt;= key) &#123;</span><br><span class="line">            </span><br><span class="line">            j --;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果比基准数小，则将查找到的小值调换到i的位置</span></span><br><span class="line">        array[i] = array[j];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 当在右边查找到一个比基准数小的值时，就从i开始往后找比基准数大的值</span></span><br><span class="line">        <span class="keyword">while</span> (i &lt; j &amp;&amp; [array[i] integerValue] &lt;= key) &#123;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果比基准数大，则将查找到的大值调换到j的位置</span></span><br><span class="line">        array[j] = array[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 将基准数放到正确位置</span></span><br><span class="line">    array[i] = @(key);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 递归排序</span></span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> quickSortArray:array leftIndex:leftIndex rightIndex:i - <span class="number">1</span>];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> quickSortArray:array leftIndex:i + <span class="number">1</span> rightIndex:rightIndex];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-冒泡排序算法&quot;&gt;&lt;a href=&quot;#1-冒泡排序算法&quot; class=&quot;headerlink&quot; title=&quot;1.冒泡排序算法&quot;&gt;&lt;/a&gt;1.冒泡排序算法&lt;/h3&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; 冒泡排序算法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; @param mutableArray 需要排序的数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)bubbleSortArray:(&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *)mutableArray &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; mutableArray.count; i ++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; mutableArray.count - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; j ++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mutableArray[j] &amp;gt; mutableArray[j + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                [mutableArray exchangeObjectAtIndex:j withObjectAtIndex:j + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Objective-C" scheme="http://localhost:4000/tags/Objective-C/"/>
    
      <category term="排序算法" scheme="http://localhost:4000/tags/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>基于RAC封装带缓存的网络请求</title>
    <link href="http://localhost:4000/2018/01/12/%E5%9F%BA%E4%BA%8ERAC%E5%B0%81%E8%A3%85%E5%B8%A6%E7%BC%93%E5%AD%98%E7%9A%84%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/"/>
    <id>http://localhost:4000/2018/01/12/基于RAC封装带缓存的网络请求/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:52:30.465Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>RAC不是什么新鲜的概念了，这段时间闲来无事，就把自己项目中使用到的网络请求尝试用RAC封装了一下。</p><h3 id="封装网络请求"><a href="#封装网络请求" class="headerlink" title="封装网络请求"></a>封装网络请求</h3><p>RAC的核心是信号，在封装网络请求的过程中，把每一个网络请求封装成一个信号。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+ (RACSignal *)GET:(<span class="built_in">NSString</span> *)url parameters:(<span class="keyword">id</span>)parameters isCache:(<span class="built_in">BOOL</span>)isCache;</span><br><span class="line"></span><br><span class="line">+ (RACSignal *)POST:(<span class="built_in">NSString</span> *)url parameters:(<span class="keyword">id</span>)parameters isCache:(<span class="built_in">BOOL</span>)isCache;</span><br></pre></td></tr></table></figure><p>项目中常用的就是这两个网络请求方法，这两个方法的实现也很简单。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">+ (RACSignal *)GET:(<span class="built_in">NSString</span> *)url parameters:(<span class="keyword">id</span>)parameters isCache:(<span class="built_in">BOOL</span>)isCache &#123;</span><br><span class="line">    <span class="comment">/// 创建信号</span></span><br><span class="line">    RACSignal *signal = [RACSignal createSignal:^RACDisposable * _Nullable(<span class="keyword">id</span>&lt;RACSubscriber&gt;  _Nonnull subscriber) &#123;</span><br><span class="line">        <span class="comment">/// 读缓存的数据</span></span><br><span class="line">        isCache ? [subscriber sendNext:[[XKCache sharedInstance] httpCacheForURL:url parameters:parameters]] : <span class="literal">nil</span>;</span><br><span class="line">        <span class="comment">/// 基于AFNetworking发起网络请求</span></span><br><span class="line">        <span class="built_in">NSURLSessionDataTask</span> *task = [_sessionManager GET:url parameters:parameters progress:<span class="literal">nil</span> success:^(<span class="built_in">NSURLSessionDataTask</span> * _Nonnull task, <span class="keyword">id</span>  _Nullable responseObject) &#123;</span><br><span class="line">            <span class="comment">/// 请求成功</span></span><br><span class="line">            [subscriber sendNext:responseObject];</span><br><span class="line">            </span><br><span class="line">            [subscriber sendCompleted];</span><br><span class="line">            <span class="comment">/// 记录缓存数据</span></span><br><span class="line">            isCache ? [[XKCache sharedInstance] setHttpCache:responseObject URL:url parameters:parameters] : <span class="literal">nil</span>;</span><br><span class="line">            </span><br><span class="line">        &#125; failure:^(<span class="built_in">NSURLSessionDataTask</span> * _Nullable task, <span class="built_in">NSError</span> * _Nonnull error) &#123;</span><br><span class="line">           </span><br><span class="line">            [subscriber sendError:error];</span><br><span class="line">        &#125;];</span><br><span class="line">        <span class="comment">/// 当信号被销毁的时候 取消网络请求</span></span><br><span class="line">        <span class="keyword">return</span> [RACDisposable disposableWithBlock:^&#123;</span><br><span class="line">            </span><br><span class="line">            [task cancel];</span><br><span class="line">            </span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> signal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大致的思路就是样的，网络层的封装思路参照的是<a href="https://github.com/jkpang/PPNetworkHelper" target="_blank" rel="noopener">PPNetworkHelper</a>。当然，你也可以<a href="https://github.com/jhchenchong/XKNetworkingManager" target="_blank" rel="noopener">点击这里下载Demo工程</a>，查看具体的封装细节。</p><a id="more"></a><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>在需要做网络请求的地方</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">RACDisposable *disposable = [[XKNetworkingManager GET:<span class="string">@""</span> parameters:<span class="literal">nil</span> isCache:<span class="literal">YES</span>] subscribeNext:^(<span class="keyword">id</span>  _Nullable x) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 网络请求成功  如果isCache为YES 这个block会走两次 第一次回来的是缓存数据 第二次是请求成功的数据。</span></span><br><span class="line">        </span><br><span class="line">    &#125; error:^(<span class="built_in">NSError</span> * _Nullable error) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 出错</span></span><br><span class="line">        </span><br><span class="line">    &#125; completed:^&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 信号完成 执行完这个之后信号会销毁</span></span><br><span class="line">    &#125;];</span><br></pre></td></tr></table></figure><p>如果想要取消这个网络请求，调用<code>[disposable dispose]</code>。这里有点需要注意的是，调用<code>[task cancel]</code>是会走AFNetworking失败的回调的。但是，在外界是收不到取消网络请求的这个失败的。因为在外界取消这个网络请求的时候是销毁的信号。信号销毁了就不会再继续发送了，所以也订阅不到了。这里不知道有没有更好的处理方式。</p><h3 id="特别感谢"><a href="#特别感谢" class="headerlink" title="特别感谢"></a>特别感谢</h3><p><a href="https://github.com/jkpang/PPNetworkHelper" target="_blank" rel="noopener">PPNetworkHelper</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;p&gt;RAC不是什么新鲜的概念了，这段时间闲来无事，就把自己项目中使用到的网络请求尝试用RAC封装了一下。&lt;/p&gt;
&lt;h3 id=&quot;封装网络请求&quot;&gt;&lt;a href=&quot;#封装网络请求&quot; class=&quot;headerlink&quot; title=&quot;封装网络请求&quot;&gt;&lt;/a&gt;封装网络请求&lt;/h3&gt;&lt;p&gt;RAC的核心是信号，在封装网络请求的过程中，把每一个网络请求封装成一个信号。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (RACSignal *)GET:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)url parameters:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)parameters isCache:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isCache;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ (RACSignal *)POST:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)url parameters:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)parameters isCache:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isCache;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;项目中常用的就是这两个网络请求方法，这两个方法的实现也很简单。&lt;/p&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;+ (RACSignal *)GET:(&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)url parameters:(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)parameters isCache:(&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isCache &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/// 创建信号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    RACSignal *signal = [RACSignal createSignal:^RACDisposable * _Nullable(&lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;&amp;lt;RACSubscriber&amp;gt;  _Nonnull subscriber) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/// 读缓存的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        isCache ? [subscriber sendNext:[[XKCache sharedInstance] httpCacheForURL:url parameters:parameters]] : &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/// 基于AFNetworking发起网络请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;NSURLSessionDataTask&lt;/span&gt; *task = [_sessionManager GET:url parameters:parameters progress:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt; success:^(&lt;span class=&quot;built_in&quot;&gt;NSURLSessionDataTask&lt;/span&gt; * _Nonnull task, &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;  _Nullable responseObject) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/// 请求成功&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [subscriber sendNext:responseObject];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [subscriber sendCompleted];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/// 记录缓存数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            isCache ? [[XKCache sharedInstance] setHttpCache:responseObject URL:url parameters:parameters] : &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; failure:^(&lt;span class=&quot;built_in&quot;&gt;NSURLSessionDataTask&lt;/span&gt; * _Nullable task, &lt;span class=&quot;built_in&quot;&gt;NSError&lt;/span&gt; * _Nonnull error) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [subscriber sendError:error];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;/// 当信号被销毁的时候 取消网络请求&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [RACDisposable disposableWithBlock:^&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            [task cancel];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; signal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;大致的思路就是样的，网络层的封装思路参照的是&lt;a href=&quot;https://github.com/jkpang/PPNetworkHelper&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PPNetworkHelper&lt;/a&gt;。当然，你也可以&lt;a href=&quot;https://github.com/jhchenchong/XKNetworkingManager&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;点击这里下载Demo工程&lt;/a&gt;，查看具体的封装细节。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://localhost:4000/tags/iOS/"/>
    
      <category term="RAC" scheme="http://localhost:4000/tags/RAC/"/>
    
      <category term="网络请求" scheme="http://localhost:4000/tags/%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/"/>
    
  </entry>
  
  <entry>
    <title>带PlaceHolder的UITextView</title>
    <link href="http://localhost:4000/2018/01/12/%E5%B8%A6PlaceHolder%E7%9A%84UITextView/"/>
    <id>http://localhost:4000/2018/01/12/带PlaceHolder的UITextView/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:51:43.941Z</updated>
    
    <content type="html"><![CDATA[<h3 id="带PlaceHolder的UITextView"><a href="#带PlaceHolder的UITextView" class="headerlink" title="带PlaceHolder的UITextView"></a>带PlaceHolder的UITextView</h3><p>在日常开发中，用户反馈界面基本在每个App中都存在，如下图所示：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-d9f5dd1d4365ae31.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="屏幕快照 2017-05-12 下午3.58.11.png"></p><a id="more"></a><p>输入反馈建议的地方通常都是一个UITextView，但是比较蛋疼的地方就是UITextView并没有PlaceHolder属性。在这里，肯定有很多方式可以解决这个问题。我这里把我通常是在<code>- (void)textViewDidBeginEditing:(UITextView *)textView</code>和<code>- (void)textViewDidEndEditing:(UITextView *)textView</code>这两个代理中去做处理。其实也很简单。</p><p>代码如下：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">UITextView</span> *)textView &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!_textView) &#123;</span><br><span class="line">        _textView = [[<span class="built_in">UITextView</span> alloc] init];</span><br><span class="line">        _textView.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">        _textView.delegate = <span class="keyword">self</span>;</span><br><span class="line">        _textView.text = <span class="string">@"请输入遇到的问题或建议"</span>;</span><br><span class="line">        <span class="comment">// 设置PlaceHolder的字体颜色</span></span><br><span class="line">        _textView.textColor = [<span class="built_in">UIColor</span> xk_colorWithHexString:<span class="string">@"#CCCCD1"</span>];</span><br><span class="line">        <span class="comment">//  设置字体（里面的宏和常量是我项目中自己定义的）</span></span><br><span class="line">        _textView.font = FONT(xkfontSize * PROPORTION);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _textView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)textViewDidBeginEditing:(<span class="built_in">UITextView</span> *)textView &#123;</span><br><span class="line">    <span class="comment">// 在已经开始编辑的方法中判断如果当前textView.text为PlaceHolder的值 就将其值改变为空字符串</span></span><br><span class="line">    <span class="keyword">if</span> ([textView.text isEqualToString:<span class="string">@"请输入遇到的问题或建议"</span>]) &#123;</span><br><span class="line">        </span><br><span class="line">        textView.text = <span class="string">@""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    textView.textColor = [<span class="built_in">UIColor</span> xk_colorWithHexString:kBTitleColor];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)textViewDidEndEditing:(<span class="built_in">UITextView</span> *)textView &#123;</span><br><span class="line">    <span class="comment">// 在结束编辑的时候去判断 如果没有输入文字  那么重新将PlaceHolder设置上，同时将text的颜色修改回来</span></span><br><span class="line">    <span class="keyword">if</span> ([<span class="built_in">NSString</span> isEmpty:textView.text]) &#123;</span><br><span class="line">        </span><br><span class="line">        textView.text = <span class="string">@"请输入遇到的问题或建议"</span>;</span><br><span class="line">        </span><br><span class="line">        textView.textColor = [<span class="built_in">UIColor</span> xk_colorWithHexString:<span class="string">@"#CCCCD1"</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，我们就简单的实现了一个带PlaceHolder的UITextView的。</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-b1a765371cdd7daa.gif?imageMogr2/auto-orient/strip" alt="效果图.gif"></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;带PlaceHolder的UITextView&quot;&gt;&lt;a href=&quot;#带PlaceHolder的UITextView&quot; class=&quot;headerlink&quot; title=&quot;带PlaceHolder的UITextView&quot;&gt;&lt;/a&gt;带PlaceHolder的UITextView&lt;/h3&gt;&lt;p&gt;在日常开发中，用户反馈界面基本在每个App中都存在，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1777873-d9f5dd1d4365ae31.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;屏幕快照 2017-05-12 下午3.58.11.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://localhost:4000/tags/iOS/"/>
    
      <category term="UITextView" scheme="http://localhost:4000/tags/UITextView/"/>
    
  </entry>
  
  <entry>
    <title>开源一个练手的小项目</title>
    <link href="http://localhost:4000/2018/01/12/%E5%BC%80%E6%BA%90%E4%B8%80%E4%B8%AA%E7%BB%83%E6%89%8B%E7%9A%84%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    <id>http://localhost:4000/2018/01/12/开源一个练手的小项目/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:52:49.569Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关于小项目"><a href="#关于小项目" class="headerlink" title="关于小项目"></a>关于小项目</h3><p>这是超低仿《你的日记》的一款小应用，主要实现了日记的编写和本地化。结合了一些有趣的小动画和自定义转场。代码写得比较随意，基本遵守MVC模式。如果有小伙伴对于项目里的动画感兴趣，可以在文章最后下载代码自行研究。如果不想研究，那就等有时间了我将动画相关的代码抽出来单独写一篇文章。项目的素材都来自于上面说的应用，感谢原作者的UI和交互思路。突然发现，好像自己真的只会写功能。不会写代码的UI不是好产品。。。</p><h3 id="项目的基本结构"><a href="#项目的基本结构" class="headerlink" title="项目的基本结构"></a>项目的基本结构</h3><p><img src="http://upload-images.jianshu.io/upload_images/1777873-626370980f79c308.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="项目基本结构.png"></p><ul><li>ZSSRichTextEditor 一个三方的富文本编辑器，自己按照需求做了一些修改。(我不会说改出了一些bug)。</li><li>Others 项目基本的文件和静态的资源都丢在这里。还有PCH文件和全局的宏定义。</li><li>Helper 转场动画，本地缓存管理以及播放音乐的小工具。</li><li>Catagory 一些有用的小分类。</li><li>Controllers 控制器相关。</li><li>Modles 日记相关的数据模型。</li><li>Views 自定义的View。</li></ul><p>采用CocoaPods管理三方库。该项目包含的三方库有MJRefresh，SVProgressHUD，Masonry，YYCache，YYModel，AnimatedLayout。<br>常用的大家都知道的三方就不多说了。AnimatedLayout是一个以极其简单的方式实现了CollectionView的视觉差动画。它是一个自定义的FlowLayout。有兴趣的小伙伴 <a href="https://github.com/jhchenchong/AnimatedLayout.git" target="_blank" rel="noopener">请点击这里查看</a></p><a id="more"></a><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="http://upload-images.jianshu.io/upload_images/1777873-685be27ba43ee392.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="启动页面.PNG"><br>度娘找的一张图，自己用软件生成的启动需要的几张图。<br><img src="http://upload-images.jianshu.io/upload_images/1777873-9d8bdfecdaeb3c8b.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="日记浏览.PNG"><br>浏览页面，基本的UITableView布局，自定义NavigationBar和TableViewCell。</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-1516486d5dbe7817.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="日历页面.PNG"><br>UICollectionView加UITableView的布局，日历是利用UICollectionView实现的。下面是一个TableView而且只有一行。我在想是不是直接自定义一个视图放这里会更好。因为这里就是固定的一条数据。</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-6cf39fa087a581bb.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="日记页面.PNG"><br>由选择日历加富文本编辑器加下面的工具栏构成。选择日历控件和工具栏都是单独封装出来的，富文本编辑器是上面提到的三方的。<br><img src="http://upload-images.jianshu.io/upload_images/1777873-5051a4dbfeeac077.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="日记页面2.PNG"><br>键盘弹出的时候这里也有做一些处理。选择日历控件的布局刷新以及颜色渐变。工具栏的按钮对应的是选择心情，天气和保存日记。也有做一些细节的小处理。比如无法保存大于当前日期的日记到本地。默认会有心情和天气。如果是正经公司开发的项目，感觉心情可以有个默认的，天气还是直接调用接口好一点。就不用选择了。<br><img src="http://upload-images.jianshu.io/upload_images/1777873-77058e7d83aa1f42.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="示例.PNG"><br>这个富文本编辑器会将文本转换成html标签，方便数据展示和格式调整。但是这里我发现一个问题，就是转换标签的过程没有办法异步操作。必须在主线程。所以如果日记里有图片的话，这里的操作会卡主线程。稍微等一下就好了。<br><img src="http://upload-images.jianshu.io/upload_images/1777873-9299b91791dd15ef.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="日记展示.PNG"><br>日记展示的页面在获取数据的时候因为日记详情是html标签，这里又是直接用的UILabel作展示，所以这里赋值前我将html中的所有标签都去掉了。只留下纯文本。没有尝试直接设置UILabel的属性字符串能不能行。等我下来试试再说。<br><img src="http://upload-images.jianshu.io/upload_images/1777873-cc8f561386102011.PNG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="日记详情.PNG"><br>点击cell到详情页面，这里有一个自定义的转场动画。详情页面是一个UICollectionView自定义的布局，就是最开始提到的那个三方实现的。<br>也有细节的处理，点击cell跳转详情，会滚动到对应的下标。</p><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>基本的东西就是这些。只是简单的实现了一些功能。很多东西都没有去设计和注意。比如说还没有做删除功能，不过这个比较简单，感兴趣的可以简单的实现一下。还有，这个小应用是没有后台，所有数据都是做的本地缓存。没有联网也有一定的好处，就是随时随地都可以记个小日记不用担心保存失败。不过弊端肯定更多。</p><p><a href="https://github.com/jhchenchong/MyDiary.git" target="_blank" rel="noopener">你可以在这里找到源码</a></p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>随意写的东西，虽然也有注意一些细节，但是肯定会有很多地方不足。毕竟平时写代码需求和交互都很明确，自己倒腾着写很多地方会考虑不周。如果你在查看过程中发现问题，欢迎指出。你们的建议将是我进步的台阶。谢谢大家！</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;关于小项目&quot;&gt;&lt;a href=&quot;#关于小项目&quot; class=&quot;headerlink&quot; title=&quot;关于小项目&quot;&gt;&lt;/a&gt;关于小项目&lt;/h3&gt;&lt;p&gt;这是超低仿《你的日记》的一款小应用，主要实现了日记的编写和本地化。结合了一些有趣的小动画和自定义转场。代码写得比较随意，基本遵守MVC模式。如果有小伙伴对于项目里的动画感兴趣，可以在文章最后下载代码自行研究。如果不想研究，那就等有时间了我将动画相关的代码抽出来单独写一篇文章。项目的素材都来自于上面说的应用，感谢原作者的UI和交互思路。突然发现，好像自己真的只会写功能。不会写代码的UI不是好产品。。。&lt;/p&gt;
&lt;h3 id=&quot;项目的基本结构&quot;&gt;&lt;a href=&quot;#项目的基本结构&quot; class=&quot;headerlink&quot; title=&quot;项目的基本结构&quot;&gt;&lt;/a&gt;项目的基本结构&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1777873-626370980f79c308.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;项目基本结构.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ZSSRichTextEditor 一个三方的富文本编辑器，自己按照需求做了一些修改。(我不会说改出了一些bug)。&lt;/li&gt;
&lt;li&gt;Others 项目基本的文件和静态的资源都丢在这里。还有PCH文件和全局的宏定义。&lt;/li&gt;
&lt;li&gt;Helper 转场动画，本地缓存管理以及播放音乐的小工具。&lt;/li&gt;
&lt;li&gt;Catagory 一些有用的小分类。&lt;/li&gt;
&lt;li&gt;Controllers 控制器相关。&lt;/li&gt;
&lt;li&gt;Modles 日记相关的数据模型。&lt;/li&gt;
&lt;li&gt;Views 自定义的View。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;采用CocoaPods管理三方库。该项目包含的三方库有MJRefresh，SVProgressHUD，Masonry，YYCache，YYModel，AnimatedLayout。&lt;br&gt;常用的大家都知道的三方就不多说了。AnimatedLayout是一个以极其简单的方式实现了CollectionView的视觉差动画。它是一个自定义的FlowLayout。有兴趣的小伙伴 &lt;a href=&quot;https://github.com/jhchenchong/AnimatedLayout.git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;请点击这里查看&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="iOS" scheme="http://localhost:4000/tags/iOS/"/>
    
      <category term="开源" scheme="http://localhost:4000/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="你的名字" scheme="http://localhost:4000/tags/%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97/"/>
    
      <category term="动漫" scheme="http://localhost:4000/tags/%E5%8A%A8%E6%BC%AB/"/>
    
      <category term="二次元" scheme="http://localhost:4000/tags/%E4%BA%8C%E6%AC%A1%E5%85%83/"/>
    
  </entry>
  
  <entry>
    <title>Gradle构建SpringMVC框架实现App请求接口</title>
    <link href="http://localhost:4000/2018/01/12/Gradle%E6%9E%84%E5%BB%BASpringMVC%E6%A1%86%E6%9E%B6%E5%AE%9E%E7%8E%B0App%E8%AF%B7%E6%B1%82%E6%8E%A5%E5%8F%A3/"/>
    <id>http://localhost:4000/2018/01/12/Gradle构建SpringMVC框架实现App请求接口/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:50:44.456Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Gradle构建SpringMVC框架实现App请求接口"><a href="#Gradle构建SpringMVC框架实现App请求接口" class="headerlink" title="Gradle构建SpringMVC框架实现App请求接口"></a>Gradle构建SpringMVC框架实现App请求接口</h3><p>最近这段时间忙着在找工作，面试不是很多。闲着没什么事干就想着把积累的一点后台的知识理一理，虽然不一定非得做这方面的工作，但是以后的工作中，遇到一些问题可以快速的定位到。接触后台的时间很短，在上一家公司的时候也做过一些给App写接口的工作。后台那边的框架也很多都不懂，就是简单的依葫芦画瓢。遇到问题也有后台小哥帮忙解决。接下来，我就用我了解的一点后台知识，实现一个接口供App调用。</p><h3 id="环境描述"><a href="#环境描述" class="headerlink" title="环境描述"></a>环境描述</h3><ul><li><p>操作系统:MacOS</p></li><li><p>编译器:Intellij IDEA 2016</p></li><li><p>Java运行环境，Tomcat</p></li><li><p>依赖管理工具：Gradle</p></li><li><p>基础框架：SpringMVC</p></li></ul><a id="more"></a><h3 id="Gradle构建springMVC框架"><a href="#Gradle构建springMVC框架" class="headerlink" title="Gradle构建springMVC框架"></a>Gradle构建springMVC框架</h3><p>打开我们的编译器，创建一个新的工程，选择Gradle,勾选Web,如下图所示：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-5c90a06fa77f48fb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建工程"></p><p>点击Next，填写GroupId和ArtfactId(GroupId：项目的唯一标识，ArtfactId：一般为项目名称)，如图：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-df8de46bf6625cde.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建工程"></p><p>依然Next，配置一些Gradle的相关信息，具体的我不是很了解，这里选择的是会自己去下载相应的Gradle版本。当然也可以使用本地Gradle，建议先下载到本地，不然就自己准备梯子。这个下载速度真的感人。</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-a1cc7e39b565b323.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建工程"></p><p>点击Next，项目创建完成。基础的工程目录结构如下图:</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-9ae70d4b919fef8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="基础工程目录"></p><p>接下来配置Tomcat服务器，不知道怎么描述，我们还是看图说话吧，编译器右上角如图的地方，点击一个Tomcat服务。</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-7fc7ae1a2476d3e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置Tomcat服务器"></p><p>左上角的添加按钮点击添加一个Tomcat Server 选择Local</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-193c1b96bc78b5ed.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加Tomcat Server"></p><p>输入一个Name，我们发现右下角有一个错误提示，是让你配置一个路径，点击Fix随便选一个就好了。然后点击Apply，再点击OK。这样，我们的Tomcat Server就配置完成了。还是图：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-3021f4ca55add446.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置Tomcat Server"></p><p>如果不出什么意外的话，程序可以跑起来了。为了看效果，接下来我们到src目录下的main目录下的webapp目录中找到index.jsp文件，在body中随意的输入一点文字。</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-2c01b3975be889c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改index.jsp文件"><br>运行程序，如果可以看到默认的jsp页面，表示一切到这里都很正常。</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-725fb8c7c1a26f7c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="运行成功的jsp页面"></p><p>到这里，基础的工程搭建出来了，接着呢，我们利用Gradle导入SpringMVC的框架<br>打开工程目录下的build.gradle文件，在dependencies中引入框架。这个我觉得就相当于iOS开发中的cococaPods。一个构建和管理三方依赖的插件。</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-bce4c0adb4573ed0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="build.gradle"></p><blockquote><p>compile ‘org.springframework:spring-webmvc:4.3.6.RELEASE’</p></blockquote><p>这里会自动的去下载框架需要的jar包，这里还是要会科学上网。不然这个下载速度真不是一个慢字能够描述的。修改了这个文件之后，就会自动去下载了。有时候网不好的话，会失败的。失败之后可以在如上图所示的最右边的侧边栏中选中Gradle，然后点击刷新就好了。</p><p>SpringMVC引入完成，接着我们去java目录下建一个包，接着新建一个类出来。</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-e8ab7df245eb9663.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="新建一个包"></p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-b669d131c9da9a3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="在刚刚建的包下建一个DemoController的类"><br>接下来在DemoController中简单的写几行代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"test"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/hello"</span>, method = RequestMethod.GET)</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Map map = <span class="keyword">new</span> HashMap();</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">"msg"</span>, <span class="string">"请求成功"</span>);</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">"data"</span>, <span class="string">"浪漫恋星空"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注解的意思呢，我也解释不清楚，只知道这样写。先把这些东西知道怎么用了再慢慢的去研究下。</p><p>修改了代码，我们重新启动一下服务器。还是可以正常的看到我们刚刚的页面，接下来在地址栏输入下面的地址，当然这个地址是我Demo中随意写的。它的构成也很简单，就是本机的地址加上@RequestMapping里面的东西拼接起来的。</p><blockquote><p><a href="http://localhost:8080/test/hello">http://localhost:8080/test/hello</a></p></blockquote><p>然后，开心的敲了一下回车。我们就可以得到我们的数据了。等等，这么简单？看图：</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-f176b304ac06cc17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="错误页面"><br>喜闻乐见，说好的数据呢。习惯了Xcode崩溃在main的地方，到这里，是不是感觉一脸懵逼？别急，刚刚我们虽然引入了SpringMVC框架，但是还需要在项目中作一些配置。感觉后台的东西真的太杂了，各种配置工程，反正我是很不习惯。打开Project Structure(编译器界面的右上角的地方)，找到Web Gradle模块，并点击Deployment Descriptors栏右侧的加号添加web.xml文件。如图：<br><img src="http://upload-images.jianshu.io/upload_images/1777873-ff51e71b64f9104b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建web.xml文件"><br>打开刚刚创建的web.xml文件，在该文件中添加如下映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再次重启服务器，在地址栏输入前面的地址。然后我发现还是一个404的浏览错误，因为自己对于后台基本的配置不是很了解，在这里倒腾了很久。</p><p>刚刚我们在建立web.xml的时候是默认的路径，我这边是在.idea目录的modules目录的WEB-INF下，而这个路径查资料说是必须在webapp目录下的WEB-INF中，然而我初始的工程中没有这个文件。没有怎么办，new一个出来就完事了。创建好了之后把我们之前的web.xml文件拖到webapp目录的WEB-INF下，重启服务器。还是刚刚的地址。tomcat返回异常信息，nested exception is java.io.FileNotFoundException: Could not open ServletContext resource [/WEB-INF/dispatcher-servlet.xml]。这是因为刚刚我们在web.xml中配置了一个dispatcher，我们需要同时给这个dispatcher创建一个dispatcher-servlet.xml，还是在webapp目录的WEB-INF中。</p><blockquote><p>注意：dispatcher-servlet.xml这是一个Spring Config文件，它的名字是有规定的，就是刚刚在web.xml中配置的servlet-name-servlet.xml。</p></blockquote><p><img src="http://upload-images.jianshu.io/upload_images/1777873-8fb192fe6705aa62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="创建Spring Config文件"><br>创建好这个文件之后，在dispatcher-servlet.xml中输入下面的内容。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"cn.iotguard.demo.controller"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再次重启服务器，地址栏输入最开的地址。</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-feded17b71df715a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="错误信息"></p><p>这次又出现了如图的错误信息，大致可以知道这是一个跟数据类型相关的报错，因为我们App端拿到服务器的数据通常都是json格式的。而我们在代码中是直接返回的一个map，@ResponseBody这个注解是SpringMVC框架中的，通过它可以自动转换成json数据格式。通过这些知识，然后百度关键字，SpringMVC整合json。然后发现，还需要给框架整合一个json解析的jar包，这里就使用fastjson。修改dispatcher-servlet.xml的文件内容如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">                        http://www.springframework.org/schema/mvc/spring-mvc.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--注意：这里的包的名字要填自己的--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.xingkong.controller"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--配置@ResponseBody由fastjson解析--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.StringHttpMessageConverter"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultCharset"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"fastJsonpResponseBodyAdvice"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.fastjson.support.spring.FastJsonpResponseBodyAdvice"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>callback<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>jsonp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后别忘了添加fastjson的依赖。修改build.gradle文件。</p><blockquote><p>compile group: ‘com.alibaba’, name: ‘fastjson’, version: ‘1.2.28’</p></blockquote><p>这里给大家安利一个网站，在这个网站可以找到很多我们需要的jar包的gradle依赖的添加。<br><a href="http://www.mvnrepository.com/" target="_blank" rel="noopener">http://www.mvnrepository.com/</a></p><p>添加完依赖之后，重启服务器。接下来干什么不用再说了吧，都要说哭了。</p><p>终于等到你。。。还好我没。。。（额。。。有点偏了！ ）！</p><p><img src="http://upload-images.jianshu.io/upload_images/1777873-bc3e1945a367a80c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="正确请求到的数据"></p><p>倒腾这么久，终于还是出来了是吧。现在打开我们的Xcode，随意做一个网络请求。看看能不能把我们的数据请求回来。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[ZZTNetworkingManager GET:<span class="string">@"http://localhost:8080/test/hello"</span> parameters:<span class="literal">nil</span> success:^(<span class="keyword">id</span> responseObject) &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,responseObject);</span><br><span class="line">        </span><br><span class="line">    &#125; failure:^(<span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"%@"</span>,error);</span><br><span class="line">    &#125;];</span><br></pre></td></tr></table></figure><p>这里就是随便拿了一个项目中的网络请求方法，封装的AF，懒得重新去建工程pod三方，这里就偷个懒。运行程序，心态瞬间就炸了，请求失败了。报错如下：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;Error Domain=com.alamofire.error.serialization.response Code=<span class="number">-1011</span> <span class="string">"Request failed: internal server error (500)</span></span><br></pre></td></tr></table></figure><p>看到这个报错大家应该都不会很陌生吧，刚刚开始工作的iOS开发，如果遇到一个也是第一次给iOS端写接口的后台小兄弟，然后两个就懵逼了。这里实际上就算iOS端和后台没有约定contentType，正经一点的公司这些东西可能是老大们约定好了的。如果遇到都是新手的话，这是必踩的坑。</p><p>修改DemoController中的代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"test"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/hello"</span>, method = RequestMethod.GET, produces=<span class="string">"application/json;charset=UTF-8"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Map map = <span class="keyword">new</span> HashMap();</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">"msg"</span>, <span class="string">"请求成功"</span>);</span><br><span class="line"></span><br><span class="line">        map.put(<span class="string">"data"</span>, <span class="string">"浪漫恋星空"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在@RequestMapping中添加一个produces=”application/json;charset=UTF-8”就好了。</p><p>再次请求接口，可以看到控制台返回了请求到的数据。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">00</span>:<span class="number">02</span>:<span class="number">00</span>] __31-[ZZTHotController viewDidLoad]_block_invoke [第<span class="number">35</span>行] &#123;</span><br><span class="line">  <span class="string">"msg"</span> : <span class="string">"请求成功"</span>,</span><br><span class="line">  <span class="string">"data"</span> : <span class="string">"浪漫恋星空"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上就是Gradle构建SpringMVC框架实现App请求接口的内容介绍。当然，这是一些后台很基础的试用。稍微有一点后台基础的人都觉得这个很简单，虽然我作为一个移动端开发，但是我也有一颗后台的心好吧。感兴趣的移动端朋友可以试试写着玩。无聊了再学点数据库设计，再懂一些连接池技术，sql相信都会一些。搞不好哪天就自己倒腾一个像模像样的App出来。从设计到App再到后台，一人包办。想想还有点小激动对吧？</p><p>如果你在阅读过程中有发现文章的错误或者不足的地方，欢迎留言指出。如果你觉得文章对你还有一点帮助，随手点个赞也是极好的。一直很难下定决心做一件事，今年，我希望能够坚持写博客，记录这一年学习的过程！</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Gradle构建SpringMVC框架实现App请求接口&quot;&gt;&lt;a href=&quot;#Gradle构建SpringMVC框架实现App请求接口&quot; class=&quot;headerlink&quot; title=&quot;Gradle构建SpringMVC框架实现App请求接口&quot;&gt;&lt;/a&gt;Gradle构建SpringMVC框架实现App请求接口&lt;/h3&gt;&lt;p&gt;最近这段时间忙着在找工作，面试不是很多。闲着没什么事干就想着把积累的一点后台的知识理一理，虽然不一定非得做这方面的工作，但是以后的工作中，遇到一些问题可以快速的定位到。接触后台的时间很短，在上一家公司的时候也做过一些给App写接口的工作。后台那边的框架也很多都不懂，就是简单的依葫芦画瓢。遇到问题也有后台小哥帮忙解决。接下来，我就用我了解的一点后台知识，实现一个接口供App调用。&lt;/p&gt;
&lt;h3 id=&quot;环境描述&quot;&gt;&lt;a href=&quot;#环境描述&quot; class=&quot;headerlink&quot; title=&quot;环境描述&quot;&gt;&lt;/a&gt;环境描述&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;操作系统:MacOS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编译器:Intellij IDEA 2016&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java运行环境，Tomcat&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;依赖管理工具：Gradle&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基础框架：SpringMVC&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="web基础" scheme="http://localhost:4000/categories/web%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Gradle" scheme="http://localhost:4000/tags/Gradle/"/>
    
      <category term="SpringMVC" scheme="http://localhost:4000/tags/SpringMVC/"/>
    
      <category term="接口" scheme="http://localhost:4000/tags/%E6%8E%A5%E5%8F%A3/"/>
    
      <category term="Java" scheme="http://localhost:4000/tags/Java/"/>
    
      <category term="Tomcat" scheme="http://localhost:4000/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>浅谈iOS中的MVC</title>
    <link href="http://localhost:4000/2018/01/12/%E6%B5%85%E8%B0%88iOS%E4%B8%ADMVC/"/>
    <id>http://localhost:4000/2018/01/12/浅谈iOS中MVC/</id>
    <published>2018-01-12T09:12:22.000Z</published>
    <updated>2018-01-13T08:53:18.094Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><blockquote><p>MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。MVC被独特的发展起来用于映射传统的输入、处理和输出功能在一个逻辑的图形化用户界面的结构中。</p></blockquote><p><img src="http://upload-images.jianshu.io/upload_images/1777873-e496eccdb5a8c0e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="MVC.png"></p><a id="more"></a><p>简单的说一下这张图吧，这就像是一张MVC中的“交通规则”图，在其中制定了它们之间的通信规则。</p><ul><li>Model和View永远不能相互通信，只能通过Controller传递。</li><li>Controller可以直接与Model对话，Model通过Notification和KVO机制与Controller间接通信。</li><li>Controller可以直接与View对话，通过outlet，直接操作View，outlet 直接对应到View中的控件，View通过action向Controller报告事件的发生。Controller是View的直接数据源。Controller是View的代理，以同步 View与Controller。</li></ul><p>拿一个简单的需求举个例子，向一个UItableView的cell绑定数据。日常开发中，我们应该经常写这样的代码。<br>创建一个数据model，在里面定义我们需要的属性和构造方法。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">XKModel</span> : <span class="title">NSObject</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">instancetype</span>)modelWithDict:(<span class="built_in">NSDictionary</span> *)dict;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *title;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">copy</span>) <span class="built_in">NSString</span> *detail;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"XKModel.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">XKModel</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">instancetype</span>)modelWithDict:(<span class="built_in">NSDictionary</span> *)dict &#123;</span><br><span class="line">    </span><br><span class="line">    XKModel *model = [[<span class="keyword">self</span> alloc] init];</span><br><span class="line">    </span><br><span class="line">    [model setValuesForKeysWithDictionary:dict];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> model;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>接下来自定义cell</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"XKModel.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">XKTableViewCell</span> : <span class="title">UITableViewCell</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) XKModel *model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"XKTableViewCell.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">XKTableViewCell</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)awakeFromNib &#123;</span><br><span class="line">    [<span class="keyword">super</span> awakeFromNib];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setSelected:(<span class="built_in">BOOL</span>)selected animated:(<span class="built_in">BOOL</span>)animated &#123;</span><br><span class="line">    [<span class="keyword">super</span> setSelected:selected animated:animated];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">instancetype</span>)initWithStyle:(<span class="built_in">UITableViewCellStyle</span>)style reuseIdentifier:(<span class="built_in">NSString</span> *)reuseIdentifier &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">self</span> = [<span class="keyword">super</span> initWithStyle:style reuseIdentifier:reuseIdentifier]) &#123;</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)setModel:(XKModel *)model &#123;</span><br><span class="line">    </span><br><span class="line">    _model = model;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.textLabel.text = model.title;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.detailTextLabel.text = model.detail;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>在控制器中绑定数据显示在界面上</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"ViewController.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"XKModel.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"XKTableViewCell.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="built_in">NSString</span> *identifier = <span class="string">@"cellID"</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">ViewController</span> ()&lt;<span class="title">UITableViewDataSource</span>, <span class="title">UITableViewDelegate</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">UITableView</span> *tableView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@property</span> (<span class="keyword">nonatomic</span>, <span class="keyword">strong</span>) <span class="built_in">NSArray</span> *dataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)viewDidLoad &#123;</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">super</span> viewDidLoad];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span> initDataSource];</span><br><span class="line">    </span><br><span class="line">    [<span class="keyword">self</span>.view addSubview:<span class="keyword">self</span>.tableView];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)initDataSource &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSDictionary</span> *dict = @&#123;<span class="string">@"title"</span>:<span class="string">@"浪漫恋星空"</span>,</span><br><span class="line">                           <span class="string">@"detail"</span>:<span class="string">@"MVC"</span>&#125;;</span><br><span class="line">    </span><br><span class="line">    XKModel *model = [XKModel modelWithDict:dict];</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">NSMutableArray</span> *dataArray = @[].mutableCopy;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i ++) &#123;</span><br><span class="line">        </span><br><span class="line">        [dataArray addObject:model];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">self</span>.dataSource = dataArray.copy;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSInteger</span>)tableView:(<span class="built_in">UITableView</span> *)tableView numberOfRowsInSection:(<span class="built_in">NSInteger</span>)section &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span>.dataSource.count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UITableViewCell</span> *)tableView:(<span class="built_in">UITableView</span> *)tableView cellForRowAtIndexPath:(<span class="built_in">NSIndexPath</span> *)indexPath&#123;</span><br><span class="line">    </span><br><span class="line">    XKTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!cell) &#123;</span><br><span class="line">        </span><br><span class="line">        cell = [[XKTableViewCell alloc] initWithStyle:<span class="built_in">UITableViewCellStyleValue1</span> reuseIdentifier:identifier];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cell.model = <span class="keyword">self</span>.dataSource[indexPath.row];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> cell;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="built_in">UITableView</span> *)tableView &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (!_tableView) &#123;</span><br><span class="line">        </span><br><span class="line">        _tableView = [[<span class="built_in">UITableView</span> alloc] initWithFrame:<span class="keyword">self</span>.view.bounds style:<span class="built_in">UITableViewStylePlain</span>];</span><br><span class="line">        </span><br><span class="line">        _tableView.backgroundColor = [<span class="built_in">UIColor</span> whiteColor];</span><br><span class="line">        </span><br><span class="line">        _tableView.dataSource = <span class="keyword">self</span>;</span><br><span class="line">        </span><br><span class="line">        _tableView.delegate = <span class="keyword">self</span>;</span><br><span class="line">        </span><br><span class="line">        _tableView.tableFooterView = [[<span class="built_in">UIView</span> alloc] init];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _tableView;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure><p>做完这些，一个简单的需求就完成了。common + R 一下，完美运行。心里可能就在想了，弱鸡产品，提的需求哥分分钟搞定。而且代码写得异常规范。看看这MVC，看看这代码风格。感觉离出任CEO，迎娶白富美，走向人生巅峰的日子不远了啊。</p><p>我相信，或许这就是很多人认为的MVC。很长的一段时间里，我也是这样认为的。而且这样写起来也方便啊。但是停下来，仔细想想。在自定义的cell中，我们是直接定义了一个model的属性，作为View的cell直接耦合了一个数据model，这就意味着View的数据输入已经被确定了一定是XKModel。既然这样的话，View就已经谈不上复用了。因为它的数据输入已经被定死了。假定有这样一个需求场景，里面的cell还是长这样，但是这次我想要显示的是姓名和年龄。或许大多数的人会想到，这有什么难的，再定义一个model，依葫芦画瓢，再在cell中定义一个model属性，重写setter方法，So easy！停！！！有没有发现，从一开始，我们错误的理解了MVC。后来很久我在想一个问题，也许是iOS中一开始就给我们一个误解，什么误解呢，那就是UIViewController这样的类名设计，让我们在潜意识里认为ViewController一定是MVC中的Controller层。也许还有一部分原因是因为像UIButton，UILabel等太多系统定义好的简单的View，它们没有必要需要一个Controller层来配合。总而言之呢，我们貌似是用了一个假的MVC。</p><p>大多数情况下，我们的UIViewController更多的是作为一个需求场景，而需求场景需要做的事呢，就是根据需求对各个模块进行配置和负责UI布局，让各个模块去做自己的事就好了。每个模块的展示和交互都由它自己对应的MVC去完成。需求场景只要做一些强相关的业务逻辑即可。</p><p>我所理解的差不多就这些。这里有一篇文章，是我目前为止看到的讲MVC的文章中讲得最好的，本文的大部分思想也是来自这篇文章。</p><p><a href="http://www.jianshu.com/p/eedbc820d40a" target="_blank" rel="noopener">杂谈: MVC/MVP/MVVM</a></p><p>既然已经发现以前的理解是有问题的，那么在接下的开发中，要更多的去思考怎样才能写出复用性和可维护性更高的代码。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范，用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。MVC被独特的发展起来用于映射传统的输入、处理和输出功能在一个逻辑的图形化用户界面的结构中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1777873-e496eccdb5a8c0e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;MVC.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS开发" scheme="http://localhost:4000/categories/iOS%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="MVC" scheme="http://localhost:4000/tags/MVC/"/>
    
  </entry>
  
</feed>
